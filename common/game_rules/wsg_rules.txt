###_[teif][wsg][ptep]	##################
# Root = Species
# From = Country
# This = Species
species_has_happiness = {
	NOR = {
		has_trait = trait_machine_unit
		has_trait = trait_hive_mind
		has_trait = trait_nerve_stapled
		has_trait = sh_trait_shenhai	#_WSG
		has_trait = sh_trait_shenhai1	#_WSG
		has_trait = sh_trait_shenhai2	#_WSG
		has_trait = sh_trait_silent		#_WSG
		has_trait = sh_trait_silent1	#_WSG
		has_trait = trait_plentiful_traditions_cocoon	#_ptep
		AND = {
			has_trait = trait_mechanical
			OR = {
				NOT = { exists = from }
				from = { has_authority = auth_machine_intelligence }
				#_+teif
				from = {
					NOT = { has_technology = tech_synthetic_workers }
					NOT = { has_technology = tech_sapient_ai }	#_[teif]������
				}
				from = {
					has_policy_flag = ai_outlawed
					#_teif
					OR = {
						has_technology = tech_synthetic_workers
						has_technology = tech_sapient_ai
					}
				}
			}
		}
		AND = {
			has_trait = trait_cybernetic
			exists = from
			from = {
				has_authority = auth_machine_intelligence
				has_civic = civic_machine_assimilator # Assimilator empire
			}
		}
	}
}

#_[z_fw][teif][wsg][swg][gsf][fq]	##################
# Checks if a pop can be assembled
# This = Species
# Root = Planet
can_species_be_assembled = {
	is_sapient = yes
	NOR = {
		has_citizenship_type = { country = root.owner type = citizenship_assimilation }	#_teif
		has_trait = trait_plentiful_traditions_cocoon	#_ptep
	}
	OR = {
		#_+teif/wsg/swg/adf/gsf/fq
		AND = {
			root.owner = {
				NOR = {
					has_policy_flag = no_robot_machine_pop		#_teif
					AND = { # prevent this condition turns ture if wsg mod not installed
						has_global_flag = has_wsg_mod
						has_wg_special_authority = yes				#_wsg/swg
					}
					has_authority = auth_asharmdolls		#_adf
					has_authority = auth_commonwealth			#_gsf
					has_authority = auth_kan				#_kc
					AND = {#_fq
						has_global_flag = complex_hive
						is_hive_empire = yes
					}
				}
			}
			has_trait = trait_machine_unit
		}
		#_+z/wsg/swg/adf/gsf/fq
		AND = {
			root.owner = {
				NOR = {
					has_policy_flag = robots_outlawed			#_z/teif
					AND = { # prevent this condition turns ture if wsg mod not installed
						has_global_flag = has_wsg_mod
						has_wg_special_authority = yes				#_wsg/swg
					}
					has_authority = auth_asharmdolls		#_adf
					has_authority = auth_commonwealth			#_gsf
					AND = {#_fq
						has_global_flag = complex_hive
						is_hive_empire = yes
					}
				}
			}
			has_trait = trait_mechanical
		}
		#_wsg	ս����Ů����
		AND = {
			OR = {
				has_trait = wsg_trait_warshipgirls
				has_trait = wsg_trait_warshipgirls1
				has_trait = wsg_trait_warshipgirls2
			}
			root.owner = { OR = { 
				has_authority = auth_warshipgirls
				has_edict = wg_cross_assemble
			}}
		}
		#_wsg	�����
		AND = {
			OR={
				has_trait = sh_trait_shenhai
				has_trait = sh_trait_shenhai1
				has_trait = sh_trait_shenhai2
				has_trait = sh_trait_shenhai3
			}
			root.owner = { OR = { 
				has_authority = auth_shenhai 
				has_edict = wg_cross_assemble
			}}
		}
		#_swg	�ǽ���������
		AND = {
			has_trait = swg_trait_starshipgirls
			root.owner = { has_authority = auth_starshipgirls }
		}
		#_adf	Nou ani anquietas.Hic qua videum.
		AND = {
			has_trait = adf_trait_dolls
			root.owner = { has_authority = auth_asharmdolls }
		}
		#_gsf	��������
		AND = {
			has_trait = trait_doll
			root.owner = { has_authority = auth_commonwealth }
		}
		#_fq
		AND = {
			is_same_species = root.owner
			root.owner = {
				has_ascension_perk = ap_life_assemblers
				NOT = { has_ascension_perk = ap_life_masters }
			}
		}
		#_fq
		AND = {
			root.owner = {
				has_origin = origin_hive_overmind 
				has_ascension_perk = ap_life_assemblers
				NOT = { has_ascension_perk = ap_life_masters }			
			}
			has_species_flag = overminded_flag 				
		}
		#_fq				
		AND = {
			root.owner = { has_ascension_perk = ap_life_masters }	
			NOR = {
				has_trait = trait_machine_unit
				has_trait = trait_mechanical				
			}
		}
		#_kc
		AND = {
			OR={
				has_trait = kancolle_trait_kanmusu
				has_trait = kancolle_trait_kanmusu1
				has_trait = kancolle_trait_kanmusu2
			}
			
			ROOT = { owner = { has_authority = auth_kan } }
		}
	}
}


#_[z_fw][aup][teif][ev][ag][wsg][swg][kuat][sofe][bwm][hfe][ehof][rsnf]	##################
#This rule is a condition for bombarding planets
#Root = fleet, potential attacker
#From = planet, potential target
can_orbital_bombard = {
	exists = FROM.OWNER
	NOR = {
		any_owned_ship = {
			is_ship_size = colossus
			is_ship_size = fe_colossus	#_teif
		}
		#_rsnf	��������͵��������޷���ը
		FROM = {
			OR = {
				has_modifier = "underground_world"
				has_modifier = "ice_world"
			}
		}
	}
	NAND = {
		FROM = { is_planet_class = pc_shielded_gaia }	#_teif
		ROOT.OWNER = {
			NOR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = gray_goo
			}
		}
	}
	OR = {
		AND = {
			ROOT.OWNER = {
				NOT = { has_communications = FROM.OWNER }
			}
			FROM.OWNER = {
				NOT = { is_country_type = primitive }
			}
		}
		AND = {
			ROOT.OWNER = {
				NOR = {
					has_policy_flag = interference_passive
					has_policy_flag = interference_active
				}
			}
			FROM.OWNER = { is_country_type = primitive }
		}
		ROOT.OWNER = { is_at_war_with = FROM.CONTROLLER }
		ROOT.OWNER = { is_hostile = FROM.CONTROLLER }
		FROM = {
			OR = {
				is_planet_class = pc_infested
				has_planet_flag = bwm_ancestor_world			#_bwm
			}
		}
		FROM.CONTROLLER = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = ag_ancient_primitive_crisis	#_ag
				is_country_type = ag_zeta_crisis_country		#_ag
				is_country_type = ag_ancient_psi_guardian		#_ag
				is_country_type = original_empire				#_sofe
				is_country_type = mem_ancestor_guardian			#_bwm
				is_country_type = compound_empire				#_ehof
				is_country_type = awakened_return_kuat_empire	#_kuat
			}
		}
		ROOT.OWNER = {
			OR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire					#_	<aupȥ���˴���>
				is_country_type = dormant_marauders
				is_country_type = marauder_raiders
				is_country_type = ruined_marauders
				is_country_type = gray_goo
				is_country_type = vol
				is_country_type = mercenary_fleet				#_teif
				is_country_type = ev_leviathans_crisis			#_ev
				is_country_type = wg_crisis_country				#_wsg
				is_country_type = afk_crisis_country			#_swg
				AND = { # prevent this condition turns ture if wsg mod not installed
					has_global_flag = has_wsg_mod
					is_khan_country_type = yes						#_wsg
				}
				is_country_type = kuat_fallen_empire			#_kuat
				is_country_type = kuat_awakened_fallen_empire	#_kuat
				is_country_type = awakened_return_kuat_empire	#_kuat
				is_country_type = ag_kuat_invasion_country		#_ag
				is_country_type = ag_ancient_primitive_crisis	#_ag
				is_country_type = ag_ancient_gamma_guardian		#_ag
				is_country_type = ag_zeta_crisis_country		#_ag
				is_country_type = ag_ancient_psi_guardian		#_ag
				is_country_type = original_empire				#_sofe
				is_country_type = mem_ancestor_guardian			#_bwm
				is_country_type = compound_empire				#_ehof
				AND = {
					is_country_type = awakened_marauders
					FROM.CONTROLLER = {
						NAND = {
							is_subject_type = satrapy
							NOT = { has_country_flag = rebelling_satrapy }
						}
					}
				}
			}
		}
		AND = {
			from.controller = {
				is_country_type = faction
				NOT = { is_same_value = root.owner }
			}
			from.owner = {
				is_same_value = root.owner
			}
		}
	}
}

###_[z_fw][z_cm][teif][ev][wsg][zofe][sofe][fq]	##################
#_glbl_flg	[z_fw_flg_glbl_tech_overwhelm]	�Ƽ�����
# this = ship
# root = country that kills ship
can_spawn_debris = {
	root = { 
		OR = {
			is_country_type = default
			is_country_type = default_ev		#_EV
			is_country_type = teif_primitive	#_TEIF
			is_country_type = ascended_empire	#_ZOFE
			is_country_type = lost_empire		#_ZOFE
		}
	}
	exists = owner
	owner = {
		NAND = {#_�Ƽ�����
			OR = {
				has_global_flag = z_fw_flg_glbl_tech_overwhelm	#_[z_fw]�Ƽ�����
				has_global_flag = stability_MOD_installed		#_[teif]
			}
			relative_power = { who = root category = technology value >= superior }		#_[z_fw][teif]��һ��ĿƼ�	superior
		}
		NAND = {#_[z_cm]�޷���ȡ����Ƽ�
			OR = {
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
			has_global_flag = z_cm_fallen_technology
		}
		#_+teif/wsg/ev/sofe/fq
		NOR = {#_��Ӫ����
			has_ascension_perk = ap_enigmatic_engineering
			has_ethic = ethic_fanatic_communism				#_TEIF
			has_country_flag = fallen_empire_6_human_2		#_TEIF
			is_country_type = default_ev					#_EV
			is_country_type = wg_crisis_country				#_WSG
			AND = { # prevent this condition turns ture if wsg mod not installed
				has_global_flag = has_wsg_mod
				is_khan_country_type = yes						#_WSG
			}
			is_country_type = afk_crisis_country			#_SWG
			has_government = "gov_eternal_continuum"		#_SOFE
			has_valid_civic = civic_sofe_pursuit_answer		#_SOFE
			is_country_type = original_empire				#_SOFE
			is_country_type = original_empire_passive		#_SOFE
			has_civic = civic_hive_strong_connection		#_fq
			is_country_type = afk_crisis_country			#_swg
		}
	}
}

###_[wsg][teif][ag][ws][smco]	##################
#_sys_trgr	ws_[is_ws_system]
# this = system
# root = country
system_blocks_sensors = {
	OR = {
		is_inside_nebula = yes
		has_modifier = space_storm
		has_star_flag = lcluster
		has_star_flag = sealed_system
		has_star_flag = wg_sealed_system			#_wsg
		has_star_flag = wg_psionic_systems
		has_star_flag = fallen_sol_system			#_teif
		root = { is_country_type = teif_primitive }	#_teif
		has_star_flag = ag_no_sensor_system			#_ag
		has_star_flag = bok_globules					#_smco
		has_star_flag = star_flag_GAPS_sealed_system	#_smco
		
		# The following scripted triggers turns ture if the mod not found,
		# makes this OR condition always passed
		# is_ws_system = yes
	}
}

###_[teif][ag][wsg][kuat][sofe][ehof][seooc]	##################
# Root = country attempting to target system for movement
# This = system being targeted
can_enter_system_by_jump = {
	custom_tooltip = {
		success_text = "debug: can jump"
		fail_text = cannot_jump_to_system
		
		#_ugrp��������
		NOT = {
			root = { is_country_type = teif_primitive }	#_teif
		}
		
		#_Sealed system
		OR = {
			#_+teif
			NOR = {
				has_star_flag = sealed_system
				has_star_flag = fallen_sol_system	#_teif
			}
			#_teif
			AND = {
				root = { has_country_flag = entered_fallen_sol_system }
				has_star_flag = fallen_sol_system
			}
			#_teif
			AND = {
				root = { has_country_flag = entered_sealed_system }
				has_star_flag = sealed_system
			}
		}
		#_������ϵ	+wsg/ag/kuat/sofe/ehof
		NOR = {
			has_star_flag = lcluster
			has_star_flag = wg_sealed_system		#_wsg
			has_star_flag = wg_psionic_systems
			has_star_flag = ag_no_jump_in_system	#_ag
			has_star_flag = Kuat_system				#_kuat
			has_star_flag = Kuat_system_1			#_kuat
			has_star_flag = Kuat_system_2			#_kuat
			has_star_flag = Kuat_system_3			#_kuat
			has_star_flag = outercluster			#_SOFE	������
			has_star_flag = ehof_compound_system	#_ehof
			
			# The following scripted triggers turns ture if the mod not found,
			# makes this NOR condition cannot be passed
			
			# ehof_cohesive_system = yes				#_ehof
			# ehof_trader_system = yes				#_ehof
			# ehof_creator_system = yes				#_ehof
			has_star_flag = nep_Krahen_cluster		#_seooc
			has_star_flag = nep_Scrus_cluster		#_seooc
			AND = {#_seooc
				has_global_flag = nep_not_pass_Aemethms 
				OR = {
					has_star_flag = nep_dragon_system
					has_star_flag = nep_heptagram_cluster
				}
			}
		}
	}
}

###_[teif][wsg][swg][ptep]	##################
# This = pop
pop_generates_crime = {
	OR = {
		AND = {
			is_sapient = yes
			is_non_sapient_robot = no
			is_being_assimilated = no
			NOR = {
				#_wsg
				has_trait = wsg_trait_warshipgirls
				has_trait = wsg_trait_warshipgirls1
				has_trait = wsg_trait_warshipgirls2
				has_trait = sh_trait_shenhai
				has_trait = sh_trait_shenhai1
				has_trait = sh_trait_shenhai2
				has_trait = sh_trait_shenhai3
				has_trait = sh_trait_silent
				has_trait = trait_intelligent_galo
				#_swg
				has_trait = swg_trait_starshipgirls
				#_adf
				has_trait = adf_trait_dolls
				#_kc
				has_trait = kancolle_trait_kanmusu
				has_trait = kancolle_trait_kanmusu1
				has_trait = kancolle_trait_kanmusu2
			}
		}
		AND = {#_teif
			exists = owner
			has_trait = trait_machine_unit
			owner = {
				NOR = {
					has_country_flag = machine_computer_repressed_completed
					has_country_flag = machine_computer_release_completed
				}
			}
		}
		AND = {#_teif
			exists = owner
			has_trait = trait_hive_mind
			owner = {
				NOR = {
					has_country_flag = hive_mind_repressed_completed
					has_country_flag = hive_mind_release_completed
				}
			}
		}
	}
	#_ptep
	NOT = { has_trait = trait_plentiful_traditions_cocoon }
}

###_[swg][gsf][fq]	##################
# This = country
can_build_branch_offices = {
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_MEGACORP
		#_+wsg/gsf/fq
		OR = {
			has_authority = auth_corporate
			has_authority = auth_warshipgirls	#_wsg
			has_civic = civic_gk				#_gsf
            has_valid_civic = civic_mutualistic_behavior	#_fq
		}
	}
}


###_[swg][gsf][zofe][sofe]	##################
# This = country
can_support_branch_offices = {
	#_ZOFE
	OR = {
		is_country_type = default
		is_country_type = ascended_empire
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_FALLEN_EMPIRES
		NOR = {
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
		}
	}
	is_regular_empire = yes
	NOR = {
		has_authority = auth_corporate
		has_authority = auth_warshipgirls			#_wsg
		has_civic = civic_gk						#_gsf
		has_valid_civic = civic_sofe_inner_strength	#_SOFE
	}
}


###_[swg][gsf][hfe][fq]	##################
# This = planet
# Root = country
can_build_branch_office_on_planet = {
	#_swg
	custom_tooltip = {
		fail_text = requires_recipient_not_warshipgirls
		exists = owner
		owner = {
			OR = {
				NOT = { has_authority = auth_warshipgirls }
			}
		}
	}	
	custom_tooltip = {
		fail_text = requires_recipient_not_fanatic_purifiers
		exists = owner
		owner = {
			OR = {
				is_same_species = root
				NOT = { has_civic = civic_fanatic_purifiers }
			}
		}
	}
	#_+fq
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_COMMERCIAL_PACT
		exists = owner
		OR = {
			root = { is_criminal_syndicate = yes }
			owner = { has_commercial_pact = root }
			owner = { is_in_federation_with = root }
			root = {  has_valid_civic = civic_mutualistic_behavior }	#_fq

			# allow branch offices in subsidiaries and vice versa
			root = {
				is_subject = yes
				is_subject_type = subsidiary
				overlord = { is_same_value = owner }
			}
			owner = {
				is_subject = yes
				#_+swg
				OR = {
					is_subject_type = subsidiary
					overlord = { has_authority = auth_warshipgirls }	#_swg
				}
				overlord = { is_same_value = root }
			}
			#_hfe
			AND = {
				has_global_flag = hfe_installed
				root = { overlord = { is_country = prevprev.owner } }	#_this��owner
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_CRIMINAL_HERITAGE_HAS_TRUCE
		exists = owner
		OR = {
			root = { is_criminal_syndicate = no }
			owner = {
				NOR = {
					has_truce = root
					is_at_war_with = root
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_CRIMINAL_COOLDOWN
		exists = owner
		OR = {
			root = { is_criminal_syndicate = no }
			AND = {
				root = { is_criminal_syndicate = yes }
				NOT = { has_planet_flag = criminal_branch_closed_cooldown_planet@root }
			}
		}
	}
}