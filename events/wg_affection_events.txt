namespace = wg_aft
#########################################
# 好感度系统
#########################################

# 延迟到月中检测
event = {
	id = wg_aft.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_global_flag = has_wsg_mod
		every_country = { # 泡泡事件
			limit = { is_ai = no }
			country_event = { id = wg_aft.200 }
		}
		every_country = {
			limit = { is_ai = no }
			if = {
				limit = { has_wg_special_authority = yes }
				country_event = { id = wg_aft.15 days = 12 } # 移除3级好感领袖的原版负面特性
				# country_event = { id = wg_aft.33 days = 13 }
				country_event = { id = wg_aft.35 days = 14 } # 辅助研究
				country_event = { id = wg_aft.2 days = 11 } # 每月为领袖增加好感
				
			}
			country_event = { id = wg_aft.100 days = 20 } #检查好感度数值和等级
		}
		every_country = {
			limit = {
				any_owned_leader = { has_affection_trait = yes }
				OR = {
					has_wg_special_authority = no
					OR = {
						has_civic = civic_CM
						has_ascension_perk = ap_shenhai_silent
					}
				}
			}
			country_event = { id = wg_aft.101 days = 21 }
		}
		if = {
			limit = { NOT = { has_global_flag = initialize_affection_traits }}
			every_playable_country = {
				limit = { is_ai = no }
				country_event = { id = wg_aft.10000 }
				country_event = { id = wg_aft.10001 }
			}
			set_global_flag = initialize_affection_traits
		}
	}
}

# 添加好感度
country_event = {
	id = wg_aft.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					has_ascension_perk = ap_shenhai_silent
					has_civic = civic_CM
				}
			}
			country_event = { id = wg_aft.4 }
		}
		else = {
			every_owned_leader = {
				limit = { 
					is_wg_leader_with_affection_not_full = yes
				}
				if = { #检查所有没有好感度特性的舰娘领袖并加特性
					limit = {
						has_global_flag = initialize_affection_traits
						is_wg_leader = yes
						has_affection_trait = no
					}
					set_variable = { which = affection_level value = 1 }
					add_ruler_trait = leader_trait_ruler_affection_lv1
					switch = {
						trigger = leader_class
						governor = { add_trait = leader_trait_governor_affection_lv1 }
						scientist = { add_trait = leader_trait_scientist_affection_lv1 }
						admiral = { add_trait = leader_trait_admiral_affection_lv1 }
						general = { add_trait = leader_trait_general_affection_lv1 }
					}
				}
				switch = {
					trigger = leader_class
					governor = {
						set_variable = { which = admin_colonies value = 0 }
						if = {
							limit = { ROOT = { any_owned_sector = { leader = { is_same_value = PREVPREVPREV }}}}
							ROOT = { random_owned_sector = {
								limit = { leader = { is_same_value = PREVPREVPREV }}
								ROOT = { every_owned_planet = {
									limit = { sector = { is_same_value = PREVPREVPREV }}
									PREVPREVPREVPREV = { change_variable = {
										# 数该总督正在管理多少个球，管理的球越多增加好感概率越大
										which = admin_colonies value = 1
									}}
								}}
							}}
							random_list = {
								1 = { 
									modifier = {
										check_variable = { which = "admin_colonies" value >= 2 }
										add = 1
									}
									modifier = {
										check_variable = { which = "admin_colonies" value >= 3 }
										add = 1
									}
									modifier = {
										check_variable = { which = "admin_colonies" value >= 4 }
										add = 2
									}
									modifier = {
										check_variable = { which = "months_no_affection" value >= 15 }
										add = 3
									}
									modifier = { # buff加成的额外几率
										ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
										factor = 2
									}
									set_variable = { which = "months_no_affection" value = 0 }
									switch = {
										trigger = has_leader_flag
										wsg_shimakaze_leader = { add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = governor MARRIED_FLAG = married_wsg_lady }}
										wsg_lady_leader = { add_special_leader_affection = { LEADER = lady LEADER_CLASS = governor MARRIED_FLAG = married_wsg_shimakaze }}
										灰风领袖 = { add_special_leader_affection = { LEADER = gray LEADER_CLASS = governor MARRIED_FLAG = married_gray }}
										Sharan_leader = { add_special_leader_affection = { LEADER = Sharan LEADER_CLASS = governor MARRIED_FLAG = married_Sharan }}
										yuudaichi_leader = { add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = governor MARRIED_FLAG = married_yuudaichi }}
										bubbles_leader = { 
											if = {
												limit = { owner = { NOT = { has_country_flag = bubbles_depressed }}}
												add_special_leader_affection = { LEADER = bubbles LEADER_CLASS = governor MARRIED_FLAG = married_bubbles }
											}
										}
										default = { add_normal_leader_affection = { LEADER_CLASS = governor } }
									}
									# buff加成的额外好感度
									if = {
										limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
										switch = {
											trigger = has_leader_flag
											wsg_shimakaze_leader = { add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = governor MARRIED_FLAG = married_wsg_lady }}
											wsg_lady_leader = { add_special_leader_affection = { LEADER = lady LEADER_CLASS = governor MARRIED_FLAG = married_wsg_shimakaze }}
											灰风领袖 = { add_special_leader_affection = { LEADER = gray LEADER_CLASS = governor MARRIED_FLAG = married_gray }}
											Sharan_leader = { add_special_leader_affection = { LEADER = Sharan LEADER_CLASS = governor MARRIED_FLAG = married_Sharan }}
											yuudaichi_leader = { add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = governor MARRIED_FLAG = married_yuudaichi }}
											bubbles_leader = { 
												if = {
													limit = { owner = { NOT = { has_country_flag = bubbles_depressed }}}
													add_special_leader_affection = { LEADER = bubbles LEADER_CLASS = governor MARRIED_FLAG = married_bubbles }
												}
											}
											default = { add_normal_leader_affection = { LEADER_CLASS = governor } }
										}
									}
								}
								39 = { # 伪随机
									modifier = {
										check_variable = { which = "months_no_affection" value >= 2 }
										add = -5
									}
									modifier = {
										check_variable = { which = "months_no_affection" value >= 5 }
										add = -6
									}
									modifier = {
										check_variable = { which = "months_no_affection" value >= 8 }
										add = -6
									}
									modifier = {
										check_variable = { which = "months_no_affection" value >= 10 }
										add = -8
									}
									modifier = {
										check_variable = { which = "months_no_affection" value >= 13 }
										add = -10
									}
									modifier = {
										owner = { has_country_flag = cheat_grow_affection }
										factor = 0
									}
									change_variable = { which = "months_no_affection" value = 1 }
								}
							}
						}
					}
					scientist = {
						if = {
							limit = {
								OR = { 
									is_researching_area = physics
									is_researching_area = society
									is_researching_area = engineering
								}
							}
							switch = {
								trigger = has_leader_flag
								wsg_shimakaze_leader = { 
									add_special_scientist_affection_monthly = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
								}
								yuudaichi_leader = { 
									add_special_scientist_affection_monthly = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
								}
								default = { add_scientist_affection_monthly = yes }
							}
						}
					}
					ruler = {
						add_ruler_affection_monthly = yes
					}
				}
			}
		}
	}
}

# 领袖升级加2~4好感
country_event = {
	id = wg_aft.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_wg_special_authority = yes
		NOR = {
			has_ascension_perk = ap_shenhai_silent
			has_civic = civic_CM
		}
		FROM = { 
			is_wg_leader = yes
			NOR = { 
				has_leader_flag = wsg_lady_leader
				has_leader_flag = affection_max
			}
		}
	}

	immediate = {
		FROM = { 
			change_variable = { which = affection value = 2 }
			if = { # buff加成的额外好感度
				limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
				change_variable = { which = affection value = 2 }
			}
			random_list = {
				25 = { 
					modifier = { # buff加成的额外几率
						ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					change_variable = { which = affection value = 1 }
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						change_variable = { which = affection value = 1 }
					}
				}
				75 = {
					modifier = {
						factor = 1.4
						leader_class = ruler
					}
					modifier = {
						factor = 1.6
						leader_class = governor
					}
					modifier = {
						factor = 0.2
						leader_class = admiral
					}
					modifier = {
						factor = 0
						leader_class = general
					}
				}
			}
			random_list = {
				15 = { 
					modifier = { # buff加成的额外几率
						ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					change_variable = { which = affection value = 1 }
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						change_variable = { which = affection value = 1 }
					}
				}
				85 = {
					modifier = {
						factor = 0.75
						leader_class = admiral
					}
					modifier = {
						factor = 0.5
						leader_class = general
					}
				}
			}
			switch = {
				trigger = leader_class
				governor = { reset_normal_leader_affection_level = { LEADER_CLASS = governor } }
				scientist = { reset_normal_leader_affection_level = { LEADER_CLASS = scientist } }
				admiral = { reset_normal_leader_affection_level = { LEADER_CLASS = admiral } }
				general = { reset_normal_leader_affection_level = { LEADER_CLASS = general } }
				ruler = { reset_ruler_affection_level = yes }
			}
		}
	}
}

# 岛风升级加好感
country_event = {
	id = wg_aft.10003
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = get_wsg_shimakaze
		FROM = { 
			has_leader_flag = wsg_shimakaze_leader
		}
	}

	immediate = {
		change_variable = { which = shimakaze_level value = 1 }
		change_variable = { which = shimakaze_affection value = 2 }
		if = { # buff加成的额外好感度
			limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
			change_variable = { which = shimakaze_affection value = 2 }
		}
		random_list = {
			40 = { 
				modifier = { # buff加成的额外几率
					ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
					factor = 2
				}
				change_variable = { which = shimakaze_affection value = 1 }
				if = { # buff加成的额外好感度
					limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
					change_variable = { which = shimakaze_affection value = 1 }
				}
			}
			60 = {}
		}
		random_list = {
			20 = { 
				modifier = { # buff加成的额外几率
					ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
					factor = 2
				}
				change_variable = { which = shimakaze_affection value = 1 }
				if = { # buff加成的额外好感度
					limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
					change_variable = { which = shimakaze_affection value = 1 }
				}
			}
			80 = {}
		}
		reset_shimakaze_affection_level = yes
	}
}

# 泡泡升级加好感
country_event = {
	id = wg_aft.10004
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_country_flag = can_communicate_bubbles
			has_country_flag = modified_bubbles
		}
		FROM = { 
			has_leader_flag = bubbles_leader
		}
	}

	immediate = {
		change_variable = { which = bubbles_level value = 1 }
		change_variable = { which = bubbles_affection value = 2 }
		if = { # buff加成的额外好感度
			limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
			change_variable = { which = bubbles_affection value = 2 }
		}
		random_list = {
			40 = { 
				modifier = { # buff加成的额外几率
					ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
					factor = 2
				}
				change_variable = { which = bubbles_affection value = 1 }
				if = { # buff加成的额外好感度
					limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
					change_variable = { which = bubbles_affection value = 1 }
				}
			}
			60 = {}
		}
		random_list = {
			20 = { 
				modifier = { # buff加成的额外几率
					ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
					factor = 2
				}
				change_variable = { which = bubbles_affection value = 1 }
				if = { # buff加成的额外好感度
					limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
					change_variable = { which = bubbles_affection value = 1 }
				}
			}
			80 = {}
		}
		reset_bubbles_affection_level = yes
	}
}

# 以太龙升级加好感
country_event = {
	id = wg_aft.10005
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = wg_dragon_owner
		FROM = { 
			has_leader_flag = wg_dragon_leader
		}
	}

	immediate = {
		change_variable = { which = wg_dragon_level value = 1 }
		change_variable = { which = wg_dragon_affection value = 2 }
		if = { # buff加成的额外好感度
			limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
			change_variable = { which = wg_dragon_affection value = 2 }
		}
		random_list = {
			40 = { 
				modifier = { # buff加成的额外几率
					ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
					factor = 2
				}
				change_variable = { which = wg_dragon_affection value = 1 }
				if = { # buff加成的额外好感度
					limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
					change_variable = { which = wg_dragon_affection value = 1 }
				}
			}
			60 = {}
		}
		random_list = {
			20 = { 
				modifier = { # buff加成的额外几率
					ROOT = { has_modifier = wg_modifier_canteen_affectionUp1 }
					factor = 2
				}
				change_variable = { which = wg_dragon_affection value = 1 }
				if = { # buff加成的额外好感度
					limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
					change_variable = { which = wg_dragon_affection value = 1 }
				}
			}
			80 = {}
		}
		reset_wg_dragon_affection_level = yes
	}
}

# 缄默移除好感
country_event = {
	id = wg_aft.4
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_leader = {
			switch = {
				trigger = leader_class
				governor = { remove_normal_leader_affection_trait = { LEADER_CLASS = governor } }
				scientist = { remove_normal_leader_affection_trait = { LEADER_CLASS = scientist } }
				admiral = { remove_normal_leader_affection_trait = { LEADER_CLASS = admiral } }
				general = { remove_normal_leader_affection_trait = { LEADER_CLASS = general } }
				ruler = { remove_ruler_affection_trait = yes }
			}
			set_variable = { which = affection value = 0 }
			set_variable = { which = affection_level value = 0 }
		}
	}
}

# 开始加好感和特性
event = {
	id = wg_aft.5
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		NOT = { has_global_flag = initialize_affection_traits }
	}

	immediate = {
		set_global_flag = initialize_affection_traits
		every_country = {
			limit = {
				has_wg_special_authority = yes
				NOR = {
					has_ascension_perk = ap_shenhai_silent
					has_civic = civic_CM
				}
			}
			every_owned_leader = {
				limit = { is_wg_leader = yes }
				set_variable = { which = affection_level value = 1 }
				switch = {
					trigger = leader_class
					governor = { add_trait = leader_trait_governor_affection_lv1 }
					scientist = { add_trait = leader_trait_scientist_affection_lv1 }
					admiral = { add_trait = leader_trait_admiral_affection_lv1 }
					general = { add_trait = leader_trait_general_affection_lv1 }
					ruler = { add_ruler_trait = leader_trait_ruler_affection_lv1 }
				}
			}
			every_pool_leader = {
				limit = { is_wg_leader = yes }
				set_variable = { which = affection_level value = 1 }
				switch = {
					trigger = leader_class
					governor = { add_trait = leader_trait_governor_affection_lv1 }
					scientist = { add_trait = leader_trait_scientist_affection_lv1 }
					admiral = { add_trait = leader_trait_admiral_affection_lv1 }
					general = { add_trait = leader_trait_general_affection_lv1 }
				}
			}
		}
	}
}

# 科研船扫球加好感
ship_event = {
	id = wg_aft.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = leader
		leader = { 
			leader_class = scientist
			is_wg_leader_with_affection_not_full = yes 
		}
	}

	immediate = {
		leader = { random_list = {
			1 = {
				modifier = {
					check_variable = { which = "planets_no_affection" value >= 9 }
					add = 2
				}
				modifier = { # buff加成的额外几率
					owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
					factor = 2
				}
				switch = {
					trigger = has_leader_flag
					wsg_lady_leader = {
						owner = { event_target:lady_survey_scientist = {
							add_special_leader_affection = { LEADER = lady LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_lady }
						}}
					}
					wsg_shimakaze_leader = {
						owner = { event_target:shimakaze_scientist = { 
							add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
						}}
					}
					yuudaichi_leader = {
						owner = { event_target:yuudaichi_scientist = { 
							add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
						}}
					}
					default = {
						add_normal_leader_affection = { LEADER_CLASS = scientist }
					}
				}
				if = { # buff加成的额外好感度
					limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
					switch = {
						trigger = has_leader_flag
						wsg_lady_leader = {
							owner = { event_target:lady_survey_scientist = {
								add_special_leader_affection = { LEADER = lady LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_lady }
							}}
						}
						wsg_shimakaze_leader = {
							owner = { event_target:shimakaze_scientist = { 
								add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
							}}
						}
						yuudaichi_leader = {
							owner = { event_target:yuudaichi_scientist = { 
								add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
							}}
						}
						default = {
							add_normal_leader_affection = { LEADER_CLASS = scientist }
						}
					}
				}
				set_variable = { which = "planets_no_affection" value = 0 }
			}
			7 = {
				modifier = {
					check_variable = { which = "planets_no_affection" value >= 2 }
					add = -1
				}
				modifier = {
					check_variable = { which = "planets_no_affection" value >= 4 }
					add = -2
				}
				modifier = {
					check_variable = { which = "planets_no_affection" value >= 6 }
					add = -3
				}
				modifier = {
					check_variable = { which = "planets_no_affection" value >= 12 }
					factor = 0
				}
				modifier = {
					owner = { has_country_flag = cheat_grow_affection }
					factor = 0
				}
				change_variable = { which = "planets_no_affection" value = 1 }
			}
		}}
	}
}

# 科研船扫星系加好感
ship_event = {
	id = wg_aft.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = leader
		leader = { 
			leader_class = scientist
			is_wg_leader_with_affection_not_full = yes 
		}
	}

	immediate = {
		leader = { 
			switch = {
				trigger = has_leader_flag
				wsg_lady_leader = {
					owner = { event_target:lady_survey_scientist = {
						add_special_leader_affection = { LEADER = lady LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_lady }
					}}
				}
				wsg_shimakaze_leader = {
					owner = { event_target:shimakaze_scientist = { 
						add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
					}}
				}
				yuudaichi_leader = {
					owner = { event_target:yuudaichi_scientist = { 
						add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
					}}
				}
				default = {
					add_normal_leader_affection = { LEADER_CLASS = scientist }
				}
			}
			if = { # buff加成的额外好感度
				limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
				switch = {
					trigger = has_leader_flag
					wsg_lady_leader = {
						owner = { event_target:lady_survey_scientist = {
							add_special_leader_affection = { LEADER = lady LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_lady }
						}}
					}
					wsg_shimakaze_leader = {
						owner = { event_target:shimakaze_scientist = { 
							add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
						}}
					}
					yuudaichi_leader = {
						owner = { event_target:yuudaichi_scientist = { 
							add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
						}}
					}
					default = {
						add_normal_leader_affection = { LEADER_CLASS = scientist }
					}
				}
			}
			random_list = {
				30 = {
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					switch = {
						trigger = has_leader_flag
						wsg_lady_leader = {
							owner = { event_target:lady_survey_scientist = {
								add_special_leader_affection = { LEADER = lady LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_lady }
							}}
						}	
						wsg_shimakaze_leader = {
							owner = { event_target:shimakaze_scientist = { 
								add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
							}}
						}
						yuudaichi_leader = {
							owner = { event_target:yuudaichi_scientist = { 
								add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
							}}
						}
						default = {
							add_normal_leader_affection = { LEADER_CLASS = scientist }
						}
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						switch = {
							trigger = has_leader_flag
							wsg_lady_leader = {
								owner = { event_target:lady_survey_scientist = {
									add_special_leader_affection = { LEADER = lady LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_lady }
								}}
							}	
							wsg_shimakaze_leader = {
								owner = { event_target:shimakaze_scientist = { 
									add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
								}}
							}
							yuudaichi_leader = {
								owner = { event_target:yuudaichi_scientist = { 
									add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
								}}
							}
							default = {
								add_normal_leader_affection = { LEADER_CLASS = scientist }
							}
						}
					}
				}
				70 = {}
			}
		}
	}
}

# 科技完成研究时加好感度
country_event = {
	id = wg_aft.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_leader = {
			limit = {
				leader_class = scientist
				OR = { 
					is_researching_area = physics
					is_researching_area = society
					is_researching_area = engineering
				}
				OR = { 
					AND = {
						is_wg_leader = yes
						NOT = { has_leader_flag = affection_max }
					}
					AND = {
						has_leader_flag = wsg_shimakaze_leader
						NOT = { ROOT = { has_country_flag = shimakaze_affection_max }}
					}
					AND = {
						has_leader_flag = yuudaichi_leader
						NOT = { ROOT = { has_country_flag = yuudaichi_affection_max }}
					}
				}
			}
			random_list = {
				1 = {
					modifier = {
						check_variable = { which = "techs_no_affection" value >= 5 }
						add = 1
					}
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					set_variable = { which = "techs_no_affection" value = 0 }
					if = {
						limit = { has_leader_flag = wsg_shimakaze_leader }
						add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
					} 
					else_if = {
						limit = { has_leader_flag = yuudaichi_leader }
						add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
					} 
					else_if = {
						limit = { always = yes }
						add_normal_leader_affection = { LEADER_CLASS = scientist }
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						if = {
							limit = { has_leader_flag = wsg_shimakaze_leader }
							add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
						} 
						else_if = {
							limit = { has_leader_flag = yuudaichi_leader }
							add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
						} 
						else_if = {
							limit = { always = yes }
							add_normal_leader_affection = { LEADER_CLASS = scientist }
						}
					}
				}
				19 = {
					modifier = {
						check_variable = { which = "techs_no_affection" value >= 1 }
						add = -5
					}
					modifier = {
						check_variable = { which = "techs_no_affection" value >= 2 }
						add = -5
					}
					modifier = {
						check_variable = { which = "techs_no_affection" value >= 3 }
						add = -5
					}
					modifier = {
						check_variable = { which = "techs_no_affection" value >= 4 }
						add = -3
					}
					change_variable = { which = "techs_no_affection" value = 1 }
				}
			}
		}
	}
}

# 进入战斗增加好感
country_event = {
	id = wg_aft.9
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			FROMFROM = { 
				exists = leader
				leader = { leader_class = admiral }
			}
			FROMFROMFROM = { 
				exists = leader 
				leader = { leader_class = admiral }
			}
		}
	}

	immediate = {
		FROMFROM = {
			if = {
				limit = { 
					has_fleet_flag = lady_fleet2
					NOR = { 
						has_fleet_flag = counting_affection
						owner = { has_country_flag = lady_affection_max }
					}
				}
				set_fleet_flag = counting_affection
				set_variable = { which = "days_combat_no_affection" value = 0 }
				fleet_event = { id = wg_aft.1003 }
			}
			else_if = {
				limit = { 
					OR = {
						has_fleet_flag = lost_amoeba_fleet@owner
						has_fleet_flag = lost_amoeba_adult_fleet@owner
						has_fleet_flag = lost_amoeba_centenarian_fleet@owner
					}
				}
				set_fleet_flag = counting_affection
				set_variable = { which = "days_combat_no_affection" value = 0 }
				fleet_event = { id = wg_aft.201 }
			}
			else_if = {
				limit = { 
					leader = { 
						leader_class = admiral
						is_wg_leader_with_affection_not_full = yes
					}
					NOT = { has_fleet_flag = counting_affection }
				}
				set_fleet_flag = counting_affection
				leader = { set_variable = { which = "days_combat_no_affection" value = 0 }}
				fleet_event = { id = wg_aft.10 }
			}
		}

		FROMFROMFROM = {
			if = {
				limit = { 
					has_fleet_flag = lady_fleet2
					NOR = { 
						has_fleet_flag = counting_affection
						owner = { has_country_flag = lady_affection_max }
					}
				}
				set_fleet_flag = counting_affection
				set_variable = { which = "days_combat_no_affection" value = 0 }
				fleet_event = { id = wg_aft.1003 }
			}
			else_if = {
				limit = { 
					OR = {
						has_fleet_flag = lost_amoeba_fleet@owner
						has_fleet_flag = lost_amoeba_adult_fleet@owner
						has_fleet_flag = lost_amoeba_centenarian_fleet@owner
					}
				}
				set_fleet_flag = counting_affection
				set_variable = { which = "days_combat_no_affection" value = 0 }
				fleet_event = { id = wg_aft.201 }
			}
			else_if = {
				limit = { 
					leader = { 
						leader_class = admiral
						is_wg_leader_with_affection_not_full = yes
					}
					NOT = { has_fleet_flag = counting_affection }
				}
				set_fleet_flag = counting_affection
				set_variable = { which = "days_combat_no_affection" value = 0 }
				fleet_event = { id = wg_aft.10 }
			}
		}
	}
}

# 战斗中每日计算好感
fleet_event = {
	id = wg_aft.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = leader
		leader = { leader_class = admiral }
		has_fleet_flag = counting_affection
	}

	immediate = {
		if = {
			limit = { is_in_combat = yes }
			leader = { random_list = {
				1 = {
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 4 }
						add = 2
					}
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 12 }
						add = 3
					}
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 16 }
						add = 6
					}
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					set_variable = { which = "days_combat_no_affection" value = 0 }
					switch = {
						trigger = has_leader_flag
						wsg_shimakaze_leader = {
							add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = admiral MARRIED_FLAG = married_wsg_shimakaze }
						}
						wg_dragon_admiral = { add_special_leader_affection = { LEADER = wg_dragon LEADER_CLASS = admiral MARRIED_FLAG = married_wg_dragon }}
						wg_dragon_warship = { add_special_leader_affection = { LEADER = wg_dragon LEADER_CLASS = warship MARRIED_FLAG = married_wg_dragon }}
						灰风领袖 = {
							add_special_leader_affection = { LEADER = gray LEADER_CLASS = admiral MARRIED_FLAG = married_gray }
						}
						Sharan_leader = {
							add_special_leader_affection = { LEADER = Sharan LEADER_CLASS = admiral MARRIED_FLAG = married_Sharan }
						}
						yuudaichi_leader = {
							add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = admiral MARRIED_FLAG = married_yuudaichi }
						}
						Pellaeon_leader = {
							add_special_leader_affection = { LEADER = Pellaeon LEADER_CLASS = admiral MARRIED_FLAG = married_Pellaeon }
						}
						default = {
							add_normal_leader_affection = { LEADER_CLASS = admiral }
						}
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						switch = {
							trigger = has_leader_flag
							wsg_shimakaze_leader = {
								add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = admiral MARRIED_FLAG = married_wsg_shimakaze }
							}
							wg_dragon_admiral = { add_special_leader_affection = { LEADER = wg_dragon LEADER_CLASS = admiral MARRIED_FLAG = married_wg_dragon }}
							wg_dragon_warship = { add_special_leader_affection = { LEADER = wg_dragon LEADER_CLASS = warship MARRIED_FLAG = married_wg_dragon }}
							灰风领袖 = {
								add_special_leader_affection = { LEADER = gray LEADER_CLASS = admiral MARRIED_FLAG = married_gray }
							}
							Sharan_leader = {
								add_special_leader_affection = { LEADER = Sharan LEADER_CLASS = admiral MARRIED_FLAG = married_Sharan }
							}
							yuudaichi_leader = {
								add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = admiral MARRIED_FLAG = married_yuudaichi }
							}
							Pellaeon_leader = {
								add_special_leader_affection = { LEADER = Pellaeon LEADER_CLASS = admiral MARRIED_FLAG = married_Pellaeon }
							}
							default = {
								add_normal_leader_affection = { LEADER_CLASS = admiral }
							}
						}
					}
				}
				9 = {
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 8 }
						add = -3
					}
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 20 }
						factor = 0
					}
					change_variable = { which = "days_combat_no_affection" value = 1 }
				}
			}}
			fleet_event = { id = wg_aft.10 days = 1 }
		}
		else = {
			remove_fleet_flag = counting_affection
			leader = { set_variable = { which = "days_combat_no_affection" value = 0 }}
		}
	}
}

country_event = {
	id = wg_aft.11
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			FROMFROM = { 
				exists = leader
				leader = { leader_class = admiral }
			}
			FROMFROMFROM = { 
				exists = leader 
				leader = { leader_class = admiral }
			}
		}
	}

	immediate = {
		FROMFROM = {
            if = {
                limit = { has_fleet_flag = counting_affection }
                fleet_event = { id = wg_aft.11000 }
            }
        }
        FROMFROMFROM = { every_combatant_fleet = {
			limit = { has_fleet_flag = counting_affection }
            fleet_event = { id = wg_aft.11000 }
        }}
	}

}

# 赢得战斗增加好感
fleet_event = {
	id = wg_aft.11000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_in_combat = no }
			if = {
				limit = { 
					OR = {
						has_fleet_flag = lady_fleet2
						has_fleet_flag = lady_armed_science
					}
					owner = { 
						wsg_lady_available = yes
						NOT = { has_country_flag = lady_affection_max }
					}
					has_fleet_flag = counting_affection
				}
				remove_fleet_flag = counting_affection
				owner = {
					set_variable = { which = "days_combat_no_affection_lady" value = 0 }
					random_list = {
						1 = {
							modifier = {
								check_variable = { which = "battles_won_no_affection_lady" value >= 2 }
								add = 2
							}
							modifier = {
								check_variable = { which = "battles_won_no_affection_lady" value >= 3 }
								add = 3
							}
							modifier = { # buff加成的额外几率
								has_modifier = wg_modifier_canteen_affectionUp1
								factor = 2
							}
							set_variable = { which = "battles_won_no_affection_lady" value = 0 }
							add_lady_affection = yes
							if = { # buff加成的额外好感度
								limit = { has_modifier = wg_modifier_canteen_affectionUp2 }
								add_lady_affection = yes
							}
						}
						4 = {
							modifier = {
								check_variable = { which = "battles_won_no_affection_lady" value >= 1 }
								add = -1
							}
							modifier = {
								check_variable = { which = "battles_won_no_affection_lady" value >= 4 }
								factor = 0
							}
							change_variable = { which = "battles_won_no_affection_lady" value = 1 }
						}
					}
				}
			}
			else_if = {
				limit = { 
					exists = leader
					leader = { 
						NOT = { has_leader_flag = wsg_lady_leader }
						is_wg_leader_with_affection_not_full = yes
					}
					has_fleet_flag = counting_affection
				}
				remove_fleet_flag = counting_affection
				leader = { 
					set_variable = { which = "days_combat_no_affection" value = 0 }
					random_list = {
						1 = {
							modifier = {
								check_variable = { which = "battles_won_no_affection" value >= 2 }
								add = 2
							}
							modifier = {
								check_variable = { which = "battles_won_no_affection" value >= 3 }
								add = 3
							}
							modifier = { # buff加成的额外几率
								owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
								factor = 2
							}
							set_variable = { which = "battles_won_no_affection" value = 0 }
							switch = {
								trigger = has_leader_flag
								wsg_shimakaze_leader = {
									add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = general MARRIED_FLAG = married_wsg_shimakaze }
								}
								wg_dragon_admiral = { add_special_leader_affection = { LEADER = wg_dragon LEADER_CLASS = admiral MARRIED_FLAG = married_wg_dragon }}
								wg_dragon_warship = { add_special_leader_affection = { LEADER = wg_dragon LEADER_CLASS = warship MARRIED_FLAG = married_wg_dragon }}
								灰风领袖 = {
									add_special_leader_affection = { LEADER = gray LEADER_CLASS = admiral MARRIED_FLAG = married_gray }
								}
								Sharan_leader = {
									add_special_leader_affection = { LEADER = Sharan LEADER_CLASS = admiral MARRIED_FLAG = married_Sharan }
								}
								yuudaichi_leader = {
									add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = general MARRIED_FLAG = married_yuudaichi }
								}
								Pellaeon_leader = {
									add_special_leader_affection = { LEADER = Pellaeon LEADER_CLASS = general MARRIED_FLAG = married_Pellaeon }
								}
								default = {
									add_normal_leader_affection = { LEADER_CLASS = admiral }
								}
							}
							if = { # buff加成的额外好感度
								limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
								switch = {
									trigger = has_leader_flag
									wsg_shimakaze_leader = {
										add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = general MARRIED_FLAG = married_wsg_shimakaze }
									}
									wg_dragon_admiral = { add_special_leader_affection = { LEADER = wg_dragon LEADER_CLASS = admiral MARRIED_FLAG = married_wg_dragon }}
									wg_dragon_warship = { add_special_leader_affection = { LEADER = wg_dragon LEADER_CLASS = warship MARRIED_FLAG = married_wg_dragon }}
									灰风领袖 = {
										add_special_leader_affection = { LEADER = gray LEADER_CLASS = admiral MARRIED_FLAG = married_gray }
									}
									Sharan_leader = {
										add_special_leader_affection = { LEADER = Sharan LEADER_CLASS = admiral MARRIED_FLAG = married_Sharan }
									}
									yuudaichi_leader = {
										add_special_leader_affection = { LEADER = yuudaichi LEADER_CLASS = general MARRIED_FLAG = married_yuudaichi }
									}
									Pellaeon_leader = {
										add_special_leader_affection = { LEADER = Pellaeon LEADER_CLASS = general MARRIED_FLAG = married_Pellaeon }
									}
									default = {
										add_normal_leader_affection = { LEADER_CLASS = admiral }
									}
								}
							}
						}
						4 = {
							modifier = {
								check_variable = { which = "battles_won_no_affection" value >= 1 }
								add = -1
							}
							modifier = {
								check_variable = { which = "battles_won_no_affection" value >= 4 }
								factor = 0
							}
							change_variable = { which = "battles_won_no_affection" value = 1 }
						}
					}
				}
			}
		} else = {
			fleet_event = { id = wg_aft.11000 days = 1 }
		}
	}
}

# 特殊事件
# 全体领袖好感度+1
country_event = {
	id = wg_aft.99
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOR = {
			has_ascension_perk = ap_shenhai_silent
			has_civic = civic_CM
		}
	}

	immediate = {
		if = { # buff加成的额外好感度
			limit = { has_modifier = wg_modifier_canteen_affectionUp2 }
			every_owned_leader = {
				limit = { 
					is_wg_leader = yes
					NOR = {
						has_leader_flag = wsg_lady_leader
						has_leader_flag = affection_max
					}
				}
				change_variable = { which = affection value = 1 }
			}
			if = {
				limit = { has_country_flag = gain_wsg_lady }
				change_variable = { which = lady_affection value = 1 }
			}
			if = {
				limit = { has_country_flag = get_wsg_shimakaze }
				change_variable = { which = shimakaze_affection value = 1 }
			}
			if = {
				limit = { is_vaild_gray_owner = yes }
				change_variable = { which = gray_affection value = 1 }
			}
			if = {
				limit = { has_country_flag = has_afk_Sharan }
				change_variable = { which = Sharan_affection value = 1 }
			}
			if = {
				limit = { has_country_flag = has_kc_yuudaichi }
				change_variable = { which = yuudaichi_affection value = 1 }
			}
			if = {
				limit = { has_country_flag = has_kc_Pellaeon }
				change_variable = { which = Pellaeon_affection value = 1 }
			}
			if = {
				limit = { has_country_flag = wg_dragon_owner }
				change_variable = { which = wg_dragon_affection value = 1 }
			}
		}
		every_owned_leader = {
			limit = { 
				is_wg_leader = yes
				NOR = {
					has_leader_flag = wsg_lady_leader
					has_leader_flag = affection_max
				}
			}
			change_variable = { which = affection value = 1 }
			switch = {
				trigger = leader_class
				governor = {
					reset_normal_leader_affection_level = { LEADER_CLASS = governor }
				}
				scientist = {
					reset_normal_leader_affection_level = { LEADER_CLASS = scientist }
				}
				admiral = {
					reset_normal_leader_affection_level = { LEADER_CLASS = admiral }
				}
				general = {
					reset_normal_leader_affection_level = { LEADER_CLASS = general }
				}
				ruler = {
					reset_ruler_affection_level = yes
				}
			}
		}
		if = {
			limit = { has_country_flag = gain_wsg_lady }
			change_variable = { which = lady_affection value = 1 }
			reset_lady_affection_level = yes
		}
		if = {
			limit = { has_country_flag = get_wsg_shimakaze }
			change_variable = { which = shimakaze_affection value = 1 }
			reset_shimakaze_affection_level = yes
		}
		if = {
			limit = { is_vaild_gray_owner = yes }
			change_variable = { which = gray_affection value = 1 }
			reset_gray_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_afk_Sharan }
			change_variable = { which = Sharan_affection value = 1 }
			reset_Sharan_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_kc_yuudaichi }
			change_variable = { which = yuudaichi_affection value = 1 }
			reset_yuudaichi_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_kc_Pellaeon }
			change_variable = { which = Pellaeon_affection value = 1 }
			reset_Pellaeon_affection_level = yes
		}
		if = {
			limit = { has_country_flag = wg_dragon_owner }
			change_variable = { which = wg_dragon_affection value = 1 }
			reset_wg_dragon_affection_level = yes
		}
	}
}

# 战争胜利后统治者，海军提督+3好感，陆军将领+2好感，特殊领袖+3好感
country_event = {
	id = wg_aft.12
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		FROMFROM = { any_attacker = {
			has_wg_special_authority = yes
			NOR = {
				has_ascension_perk = ap_shenhai_silent
				has_civic = civic_CM
			}
		}}
	}

	immediate = {
		every_war_attacker = {
			enemy = FROM
			limit = {
				has_wg_special_authority = yes
				NOR = {
					has_ascension_perk = ap_shenhai_silent
					has_civic = civic_CM
				}
			}
			if = { # buff加成的额外好感度
				limit = { has_modifier = wg_modifier_canteen_affectionUp2 }
				every_owned_leader = {
					limit = { 
						is_wg_leader = yes
						NOR = {
							has_leader_flag = wsg_lady_leader
							has_leader_flag = affection_max
						}
					}
					switch = {
						trigger = leader_class
						admiral = {
							change_variable = { which = affection value = 3 }
						}
						general = {
							change_variable = { which = affection value = 3 }
						}
						ruler = {
							change_variable = { which = affection value = 3 }
						}
						default = {}
					}
				}
				if = {
					limit = { has_country_flag = gain_wsg_lady }
					change_variable = { which = lady_affection value = 3 }
				}
				if = {
					limit = { has_country_flag = get_wsg_shimakaze }
					change_variable = { which = shimakaze_affection value = 3 }
				}
				if = {
					limit = { is_vaild_gray_owner = yes }
					change_variable = { which = gray_affection value = 3 }
				}
				if = {
					limit = { has_country_flag = has_afk_Sharan }
					change_variable = { which = Sharan_affection value = 3 }
				}
				if = {
					limit = { has_country_flag = has_kc_yuudaichi }
					change_variable = { which = yuudaichi_affection value = 3 }
				}
				if = {
					limit = { has_country_flag = has_kc_Pellaeon }
					change_variable = { which = Pellaeon_affection value = 3 }
				}
				if = {
					limit = { has_country_flag = wg_dragon_owner }
					change_variable = { which = wg_dragon_affection value = 3 }
				}
			}
			every_owned_leader = {
				limit = { 
					is_wg_leader = yes
					NOR = {
						has_leader_flag = wsg_lady_leader
						has_leader_flag = affection_max
					}
				}
				switch = {
					trigger = leader_class
					admiral = {
						change_variable = { which = affection value = 3 }
						reset_normal_leader_affection_level = { LEADER_CLASS = admiral }
					}
					general = {
						change_variable = { which = affection value = 3 }
						reset_normal_leader_affection_level = { LEADER_CLASS = general }
					}
					ruler = {
						change_variable = { which = affection value = 3 }
						reset_ruler_affection_level = yes
					}
					default = {}
				}
			}
			if = {
				limit = { has_country_flag = gain_wsg_lady }
				change_variable = { which = lady_affection value = 3 }
				reset_lady_affection_level = yes
			}
			if = {
				limit = { has_country_flag = get_wsg_shimakaze }
				change_variable = { which = shimakaze_affection value = 3 }
				reset_shimakaze_affection_level = yes
			}
			if = {
				limit = { is_vaild_gray_owner = yes }
				change_variable = { which = gray_affection value = 3 }
				reset_gray_affection_level = yes
			}
			if = {
				limit = { has_country_flag = has_afk_Sharan }
				change_variable = { which = Sharan_affection value = 3 }
				reset_Sharan_affection_level = yes
			}
			if = {
				limit = { has_country_flag = has_kc_yuudaichi }
				change_variable = { which = yuudaichi_affection value = 3 }
				reset_yuudaichi_affection_level = yes
			}
			if = {
				limit = { has_country_flag = has_kc_Pellaeon }
				change_variable = { which = Pellaeon_affection value = 3 }
				reset_Pellaeon_affection_level = yes
			}
			if = {
				limit = { has_country_flag = wg_dragon_owner }
				change_variable = { which = wg_dragon_affection value = 3 }
				reset_wg_dragon_affection_level = yes
			}
		}
	}
}

# 地面战胜利增加好感
country_event = {
	id = wg_aft.13
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_army = {
			exists = planet
			planet = { is_same_value = ROOT.FROMFROM }
			OR = {
				AND = {
					exists = leader
					leader = { is_wg_leader = yes }
				}
				is_lady_army = yes
				AND = {
					army_type = gray_army
					ROOT = { is_vaild_gray_owner = yes }
				}
			}
		}
	}

	immediate = {
		FROMFROM = { save_event_target_as = victory_planet }
		if = {
			limit = { #大小姐
				any_owned_army = {
					exists = planet
					planet = { is_same_value = event_target:victory_planet }
					is_lady_army = yes
				}
			}
			add_lady_army_affection = yes
			if = { # buff加成的额外好感度
				limit = { has_modifier = wg_modifier_canteen_affectionUp2 }
				add_lady_army_affection = yes
			}
		}
		if = {
			limit = { #灰风
				any_owned_army = {
					exists = planet
					planet = { is_same_value = event_target:victory_planet }
					army_type = gray_army
				}
			}
			change_variable = { which = gray_affection value = 1 }
			if = { # buff加成的额外好感度
				limit = { has_modifier = wg_modifier_canteen_affectionUp2 }
				change_variable = { which = gray_affection value = 1 }
			}
			reset_gray_affection_level = yes
		}
		if = {
			limit = { #以太龙
				any_owned_army = {
					exists = planet
					planet = { is_same_value = event_target:victory_planet }
					is_wg_dragon_army = yes
				}
			}
			add_wg_dragon_army_affection = yes
			if = { # buff加成的额外好感度
				limit = { has_modifier = wg_modifier_canteen_affectionUp2 }
				add_wg_dragon_army_affection = yes
			}
		}
		if = { # 其他陆军陆军
			limit = {
				any_owned_army = {
					exists = planet
					planet = { is_same_value = event_target:victory_planet }
					leader = { 
						OR = {
							has_leader_flag = wsg_shimakaze_leader
							is_wg_leader = yes 
						}
					}
				}
			}
			every_owned_army = {
				limit = {
					exists = planet
					planet = { is_same_value = event_target:victory_planet }
					leader = { 
						OR = {
							has_leader_flag = wsg_shimakaze_leader
							is_wg_leader = yes 
						}
					}
				}
				leader = { 
					switch = {
						trigger = has_leader_flag
						wsg_shimakaze_leader = {
							add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = general MARRIED_FLAG = married_wsg_shimakaze }
						}
						yuudaichi_leader = {
							add_special_leader_affection = { LEADER = yuudaichi LEADER = general MARRIED_FLAG = married_yuudaichi }
						}
						Pellaeon_leader = {
							add_special_leader_affection = { LEADER = Pellaeon LEADER = general MARRIED_FLAG = married_Pellaeon }
						}
						default = {
							add_normal_leader_affection = { LEADER_CLASS = general }
						}
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						switch = {
							trigger = has_leader_flag
							wsg_shimakaze_leader = {
								add_special_leader_affection = { LEADER = shimakaze LEADER_CLASS = general MARRIED_FLAG = married_wsg_shimakaze }
							}
							yuudaichi_leader = {
								add_special_leader_affection = { LEADER = yuudaichi LEADER = general MARRIED_FLAG = married_yuudaichi }
							}
							Pellaeon_leader = {
								add_special_leader_affection = { LEADER = Pellaeon LEADER = general MARRIED_FLAG = married_Pellaeon }
							}
							default = {
								add_normal_leader_affection = { LEADER_CLASS = general }
							}
						}
					}
				}
			}
		} 
	}
}

country_event = {
	id = wg_aft.13000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_active_event = { wg_aft.13000 }}
	}

	immediate = {
		if = {
			limit = {
				OR = {
					any_owned_army = {
						exists = planet
						is_lady_army = yes
						planet = { has_ground_combat = no }
					}
					any_owned_army = {
						exists = fleet
						is_lady_army = yes
						fleet = { is_in_combat = no }
					}
				}
			}
			if = {
				limit = {
					any_owned_army = {
						exists = planet
						is_lady_army = yes
					}
				}
				random_owned_army = {
					limit = { is_lady_army = yes }
					planet = { create_wsg_lady_army_troop = yes }
				}
			} else_if = {
				limit = { 
					any_owned_army = {
						exists = fleet
						is_lady_army = yes
					}
				}
				random_owned_army = {
					limit = { is_lady_army = yes }
					fleet = { create_wsg_lady_army_transport = yes }
				}
			}
		} else = {
			country_event = { id = wg_aft.13000 days = 1 }
		}
	}
}

# 与其他国家建立联系增加统治者好感
country_event = {
	id = wg_aft.14
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_wg_special_authority = yes
		NOR = {
			has_ascension_perk = ap_shenhai_silent
			has_civic = civic_CM
		}
		FROM = {
			is_default_and_fallen_country = yes
		}
		ruler = {
			NOT = { has_leader_flag = affection_max }
			is_wg_leader = yes
		}
	}

	immediate = {
		ruler = { add_ruler_affection = yes }
		if = { # buff加成的额外好感度
			limit = { has_modifier = wg_modifier_canteen_affectionUp2 }
			ruler = { add_ruler_affection = yes }
		}
	}
}

# 为3级以上好感领袖或特殊领袖移除负面特性
country_event = {
	id = wg_aft.15
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_leader = {
			limit = {
				OR = {
					AND = {
						is_wg_leader = yes
						check_variable = { which = affection_level value >= 3 }
					}
					is_special_affection_leader = yes
				}
			}
			switch = {
				trigger = leader_class
				governor = { remove_governor_negative_trait = yes }
				scientist = { remove_scientist_negative_trait = yes }
				admiral = { remove_admiral_negative_trait = yes }
				general = { remove_general_negative_trait = yes }
				ruler = { remove_ruler_negative_trait = yes }
			}
		}
	}
}

# 誓约——领袖选择窗口 初始化数据
country_event = {
	id = wg_aft.16
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_leader = {
			limit = {
				NOT = { has_leader_flag = married }
				is_wg_leader = yes
			}
			remove_leader_flag = can_be_married
		}
		set_variable = { which = num_marriable_leader value = 0 }
		every_owned_leader = {
			limit = {
				is_wg_leader = yes
				NOR = { 
					has_leader_flag = married
					has_leader_flag = wsg_lady_leader
				}
				check_variable = { which = affection_level value = 4 }
			}
			set_leader_flag = can_be_married
			ROOT = { change_variable = { which = num_marriable_leader value = 1 }}
			set_variable = { which = num_marriable_leader value = ROOT }
			set_variable = { which = leader_id value = num_marriable_leader }
			set_variable = { which = num_marriable_leader value = 0 }
		}
		set_variable = { which = leader_id value = 0 }
		country_event = { id = wg_aft.17 }
	}
}

# 誓约——领袖选择窗口 翻页
country_event = {
	id = wg_aft.17
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		change_variable = { which = leader_id value = 1 }
		if = {
			limit = { check_variable = { which = leader_id value <= num_marriable_leader }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					has_leader_flag = can_be_married
					check_variable = { which = leader_id value = ROOT }
				}
				save_event_target_as = leader_tobe_view_1
			}
		}
		if = {
			limit = { check_variable = { which = leader_id value = num_marriable_leader }}
			set_variable = { which = reminder value = 4 }
			country_event = { id = wg_aft.18 }
			break = yes
		}
		else = { change_variable = { which = leader_id value = 1 }}
		
		if = {
			limit = { check_variable = { which = leader_id value <= num_marriable_leader }}
			random_owned_leader = { # 这页的第二名领袖
				limit = { 
					has_leader_flag = can_be_married
					check_variable = { which = leader_id value = ROOT }
				}
				save_event_target_as = leader_tobe_view_2
			}
		}
		if = {
			limit = { check_variable = { which = leader_id value = num_marriable_leader }}
			set_variable = { which = reminder value = 3 }
			country_event = { id = wg_aft.18 }
			break = yes
		}
		else = { change_variable = { which = leader_id value = 1 }}

		if = {
			limit = { check_variable = { which = leader_id value <= num_marriable_leader }}
			random_owned_leader = { # 这页的第三名领袖
				limit = { 
					has_leader_flag = can_be_married
					check_variable = { which = leader_id value = ROOT }
				}
				save_event_target_as = leader_tobe_view_3
			}
		}
		if = {
			limit = { check_variable = { which = leader_id value = num_marriable_leader }}
			set_variable = { which = reminder value = 2 }
			country_event = { id = wg_aft.18 }
			break = yes
		}
		else = { change_variable = { which = leader_id value = 1 }}

		if = {
			limit = { check_variable = { which = leader_id value <= num_marriable_leader }}
			random_owned_leader = { # 这页的第四名领袖
				limit = { 
					has_leader_flag = can_be_married
					check_variable = { which = leader_id value = ROOT }
				}
				save_event_target_as = leader_tobe_view_4
			}
		}
		if = {
			limit = { check_variable = { which = leader_id value = num_marriable_leader }}
			set_variable = { which = reminder value = 1 }
			country_event = { id = wg_aft.18 }
			break = yes
		}
		else = { change_variable = { which = leader_id value = 1 }}

		random_owned_leader = { # 这页的第五名领袖
			limit = { 
				has_leader_flag = can_be_married
				check_variable = { which = leader_id value = ROOT }
			}
			save_event_target_as = leader_tobe_view_5
		}
		set_variable = { which = reminder value = 0 }
		country_event = { id = wg_aft.18 }
	}
}


# 誓约对象选择窗口
country_event = {
	id = wg_aft.18
	title = wg_aft.18.name
	desc = wg_aft.18.desc
	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		room = wg06_room
	}

	option = {
		name = make_ring
		trigger = {
			has_wg_special_authority = no
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 648 }
			resource_stockpile_compare = { resource = minerals value >= 648 }
			resource_stockpile_compare = { resource = alloys value >= 648 }
			resource_stockpile_compare = { resource = consumer_goods value >= 648 }
		}
		add_resource = {
			energy = -648
			minerals = -648
			alloys = -648
			consumer_goods = -648
		}
		change_variable = { which = wsg_rings value = 1 }
		is_dialog_only = yes
		response_text = wg_aft.18.desc
	}
	option = {
		name = make_ring
		trigger = {
			has_authority = auth_starshipgirls # 星战舰娘直接造戒指
		}
		allow = {
			resource_stockpile_compare = { resource = energy value >= 648 }
			resource_stockpile_compare = { resource = minerals value >= 648 }
			resource_stockpile_compare = { resource = sr_kyber_swgs value >= 648 } # 凯伯水晶
			resource_stockpile_compare = { resource = sr_tibanna_swgs value >= 648 } # 提巴那瓦斯
		}
		add_resource = {
			energy = -648
			minerals = -648
			sr_kyber_swgs = -648
			sr_tibanna_swgs = -648
		}
		change_variable = { which = wsg_rings value = 1 }
		custom_tooltip = starshipgirls_ring_tooltip
		is_dialog_only = yes
		response_text = wg_aft.18.desc
	}
	option = {
		allow = {
			check_variable = { which = wsg_rings value >= 1 }
		}
		trigger = {
			exists = event_target:leader_tobe_view_1
			check_variable = { which = reminder value <= 4 }
		}
		name = wg_aft.18.leader1
		change_variable = { which = wsg_rings value = -1 }
		hidden_effect = {
			event_target:leader_tobe_view_1 = {
				save_event_target_as = married_leader
			}
			country_event = { id = wg_aft.19 }
		}
	}
	option = {
		allow = {
			check_variable = { which = wsg_rings value >= 1 }
		}
		trigger = {
			exists = event_target:leader_tobe_view_2
			check_variable = { which = reminder value <= 3 }
		}
		name = wg_aft.18.leader2
		change_variable = { which = wsg_rings value = -1 }
		hidden_effect = {
			event_target:leader_tobe_view_2 = {
				save_event_target_as = married_leader
			}
			country_event = { id = wg_aft.19 }
		}
	}
	option = {
		allow = {
			check_variable = { which = wsg_rings value >= 1 }
		}
		trigger = {
			exists = event_target:leader_tobe_view_3
			check_variable = { which = reminder value <= 2 }
		}
		name = wg_aft.18.leader3
		change_variable = { which = wsg_rings value = -1 }
		hidden_effect = {
			event_target:leader_tobe_view_3 = {
				save_event_target_as = married_leader
			}
			country_event = { id = wg_aft.19 }
		}
	}
	option = {
		allow = {
			check_variable = { which = wsg_rings value >= 1 }
		}
		trigger = {
			exists = event_target:leader_tobe_view_4
			check_variable = { which = reminder value <= 1 }
		}
		name = wg_aft.18.leader4
		change_variable = { which = wsg_rings value = -1 }
		hidden_effect = {
			event_target:leader_tobe_view_4 = {
				save_event_target_as = married_leader
			}
			country_event = { id = wg_aft.19 }
		}
	}
	option = {
		allow = {
			check_variable = { which = wsg_rings value >= 1 }
		}
		trigger = {
			exists = event_target:leader_tobe_view_5
			NOT = { check_variable = { which = reminder value > 0 }}
		}
		name = wg_aft.18.leader5
		change_variable = { which = wsg_rings value = -1 }
		hidden_effect = {
			event_target:leader_tobe_view_5 = {
				save_event_target_as = married_leader
			}
			country_event = { id = wg_aft.19 }
		}
	}

	option = {
		trigger = {
			check_variable = { which = leader_id value > 5 }
		}
		name = wg_aft.18.a
		hidden_effect = { 
			if = {
				limit = { check_variable = { which = leader_id value > 10 }}
				change_variable = { which = leader_id value = -10 }
				change_variable = { which = leader_id value = reminder } 
			}
			else = {
				set_variable = { which = leader_id value = 0 }
			}
			country_event = { id = wg_aft.17 }
		} 
	}
	option = {
		trigger = {
			check_variable = { which = leader_id value < num_marriable_leader }
		}
		name = wg_aft.18.b
		hidden_effect = { 
			country_event = { id = wg_aft.17 }
		} 
	}
	option = {
		name = wg_aft.18.c
		hidden_effect = { 
			set_variable = { which = leader_id value = 0 }
			every_owned_leader = {
				set_variable = { which = leader_id value = 0 }
			}
		}
		default_hide_option = yes
	}
}

country_event = {
	id = wg_aft.19
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_leader = {
			set_variable = { which = leader_id value = 0 }
		}
		event_target:married_leader = {
			set_leader_flag = married
			switch = {
				trigger = has_trait
				leader_trait_admiral_Rodney = { ROOT = { country_event = { id = wg_aft.19001 }}}
				leader_trait_ruler_lexington = { ROOT = { country_event = { id = wg_aft.19002 }}}
				default = { ROOT = { country_event = { id = wg_aft.19000 }}}
			}
		}
	}
}

# 誓约仪式
country_event = {
	id = wg_aft.19000
	title = wg_aft.19.name
	desc = wg_aft.19.desc
	is_triggered_only = yes
	picture = GFX_evt_wsg_marry
	show_sound = event_wg_wedding

	immediate = {
		event_target:married_leader = {
			if = {
				limit = { NOT = { has_leader_flag = wsg_event_leader }}
				set_leader_flag = can_revive
			}
			if = {
				limit = { has_leader_flag = affection_max }
				set_variable = { which = affection_level value = 5 }
				remove_ruler_affection_trait = yes
				add_ruler_trait = leader_trait_ruler_affection_lv5
				switch = {
					trigger = leader_class
					governor = {
						remove_normal_leader_affection_trait = { LEADER_CLASS = governor }
						add_trait = leader_trait_governor_affection_lv5
					}
					scientist = {
						remove_normal_leader_affection_trait = { LEADER_CLASS = scientist }
						add_trait = leader_trait_scientist_affection_lv5
					}
					admiral = {
						remove_normal_leader_affection_trait = { LEADER_CLASS = admiral }
						add_trait = leader_trait_admiral_affection_lv5
					}
					general = {
						remove_normal_leader_affection_trait = { LEADER_CLASS = general }
						add_trait = leader_trait_general_affection_lv5
					}
				}
			}
		}
	}

	option = {
		name = wg_aft.19.a
		custom_tooltip = wg_aft.19.a.tooltip
	}
}

# 老罗誓约
country_event = {
	id = wg_aft.19001
	title = wg_aft.19.name
	desc = wg_aft.19.desc
	is_triggered_only = yes
	picture = GFX_evt_wg_rodney_wedding
	show_sound = event_wg_wedding

	immediate = {
		event_target:married_leader = { if = {
			limit = { has_leader_flag = affection_max }
			set_variable = { which = affection_level value = 5 }
			remove_normal_leader_affection_trait = { LEADER_CLASS = admiral }
			add_trait = leader_trait_admiral_affection_lv5
		}}
	}

	option = {
		name = wg_aft.19.a
	}
}

# 太太誓约
country_event = {
	id = wg_aft.19002
	title = wg_aft.19.name
	desc = wg_aft.19.desc
	is_triggered_only = yes
	picture = GFX_evt_wsg_marry
	show_sound = event_wg_wedding

	immediate = {
		event_target:married_leader = { 
			change_leader_portrait = wsg29_1
			if = {
				limit = { has_leader_flag = affection_max }
				set_variable = { which = affection_level value = 5 }
				remove_ruler_affection_trait = yes
				add_ruler_trait = leader_trait_ruler_affection_lv5
			}
		}
	}

	option = {
		name = wg_aft.19.a
	}
}

country_event = {
	id = wg_aft.30000
	title = wg_aft.30000.name
	desc = wg_aft.30000.desc
	is_triggered_only = yes
	diplomatic = yes
	show_sound = event_wg_wedding
	custom_gui = wg_gray_commu_window
	custom_gui_option = wg_gray_commu_option

	immediate = {
		set_country_flag = married_gray
		reset_gray_affection_level = yes
	}

	option = {
		name = wg_aft.30000.a
		response_text = wg_aft.30000.response
	}
}

# 灰风通讯外部触发器
country_event = {
	id = wg_aft.30001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { has_country_flag = ban_commu_with_gray }
			country_event = { id = wg_lady.10000 }
		} else_if = {
			limit = { has_country_flag = gray_reforming }
			country_event = { id = graygoo.504 }
		} else_if = {
			limit = { has_country_flag = gray_army_active }
			country_event = { id = graygoo.503 }
		} else_if = {
			limit = { has_country_flag = gray_warship_active }
			country_event = { id = graygoo.502 }
		} else_if = {
			limit = { has_country_flag = gray_governor_active }
			country_event = { id = graygoo.501 }
		} else = {
			country_event = { id = graygoo.500 }
		}
	}
}

# 测试用：全领袖满好感结婚
country_event = {
	id = wg_aft.12450
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		always = no
	}

	immediate = {
		every_owned_leader = {
			limit = {
				is_wg_leader = yes
			}
			set_leader_flag = affection_max
			set_variable = { which = affection_level value = 5 }
			set_leader_flag = married
			set_leader_flag = can_revive
			switch = {
				trigger = leader_class
				governor = { 
					set_variable = { which = affection value = @governor_affection_to_lv5 }
					remove_normal_leader_affection_trait = { LEADER_CLASS = governor }
					add_trait = leader_trait_governor_affection_lv5
				}
				scientist = { 
					set_variable = { which = affection value = @scientist_affection_to_lv5 }
					remove_normal_leader_affection_trait = { LEADER_CLASS = scientist }
					add_trait = leader_trait_scientist_affection_lv5 
				}
				admiral = { 
					set_variable = { which = affection value = @admiral_affection_to_lv5 }
					remove_normal_leader_affection_trait = { LEADER_CLASS = admiral }
					add_trait = leader_trait_admiral_affection_lv5
				}
				general = { 
					set_variable = { which = affection value = @general_affection_to_lv5 }
					remove_normal_leader_affection_trait = { LEADER_CLASS = general }
					add_trait = leader_trait_general_affection_lv5
				}
				ruler = { 
					set_variable = { which = affection value = @ruler_affection_to_lv5 }
					remove_ruler_affection_trait = yes
					add_ruler_trait = leader_trait_ruler_affection_lv5
				}
			}
		}
		set_country_flag = married_wsg_lady
		set_variable = { which = "lady_affection" value = @lady_affection_to_lv5 }
		set_variable = { which = "lady_affection_level" value = 5 }
	}
}

# 大小姐战斗中每日计算好感
fleet_event = {
	id = wg_aft.1003
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_fleet_flag = counting_affection
		OR = {
			has_fleet_flag = lady_fleet2
			has_fleet_flag = lady_armed_science
		}
	}

	immediate = {
		if = {
			limit = { is_in_combat = yes }
			owner = { 
				random_list = {
					1 = {
						modifier = { # buff加成的额外几率
							has_modifier = wg_modifier_canteen_affectionUp1
							factor = 2
						}
						set_variable = { which = "days_combat_no_affection_lady" value = 0 }
						add_lady_affection = yes
						if = { # buff加成的额外好感度
							limit = { has_modifier = wg_modifier_canteen_affectionUp2 }
							add_lady_affection = yes
						}
					}
					24 = {
						modifier = {
							check_variable = { which = "days_combat_no_affection_lady" value >= 6 }
							add = -5
						}
						modifier = {
							check_variable = { which = "days_combat_no_affection_lady" value >= 12 }
							add = -5
						}
						modifier = {
							check_variable = { which = "days_combat_no_affection_lady" value >= 18 }
							add = -5
						}
						modifier = {
							check_variable = { which = "days_combat_no_affection_lady" value >= 24 }
							add = -5
						}
						modifier = {
							check_variable = { which = "days_combat_no_affection_lady" value >= 40 }
							factor = 0
						}
						change_variable = { which = "days_combat_no_affection_lady" value = 1 }
					}
				}
			}
			fleet_event = { id = wg_aft.1003 days = 1 }
		}
		else = {
			remove_fleet_flag = counting_affection
			owner = { set_variable = { which = "days_combat_no_affection_lady" value = 0 }}
		}
	}
}

# 预备事件——查看好感度
country_event = {
	id = wg_aft.2000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = num_governor value = 0 }
		set_variable = { which = num_scientist value = 0 }
		set_variable = { which = num_admiral value = 0 }
		set_variable = { which = num_general value = 0 }
		every_owned_leader = {
			limit = {
				is_wg_leader = yes
			}
			calculate_affection_to_level_up = yes
			switch = {
				trigger = leader_class
				governor = { 
					ROOT = { change_variable = { which = num_governor value = 1 }}
					set_variable = { which = num_governor value = ROOT }
					set_variable = { which = show_id value = num_governor }
					set_variable = { which = num_governor value = 0 }
				}
				scientist = { 
					ROOT = { change_variable = { which = num_scientist value = 1 }}
					set_variable = { which = num_scientist value = ROOT }
					set_variable = { which = show_id value = num_scientist }
					set_variable = { which = num_scientist value = 0 }
				}
				admiral = { 
					ROOT = { change_variable = { which = num_admiral value = 1 }}
					set_variable = { which = num_admiral value = ROOT }
					set_variable = { which = show_id value = num_admiral }
					set_variable = { which = num_admiral value = 0 }
				}
				general = { 
					ROOT = { change_variable = { which = num_general value = 1 }}
					set_variable = { which = num_general value = ROOT }
					set_variable = { which = show_id value = num_general }
					set_variable = { which = num_general value = 0 }
				}
			}
		}
		set_variable = { which = show_id value = 0 }
		set_variable = { which = leader_class_showing value = 0 }
		country_event = { id = wg_aft.2005 }
	}
}
# 翻页（总督）
country_event = {
	id = wg_aft.2001
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		change_variable = { which = show_id value = 1 }
		set_variable = { which = reminder2 value = 2 }
		if = {
			limit = { check_variable = { which = show_id value <= num_governor }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = governor
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_1
			}
		}
		if = {
			limit = { check_variable = { which = show_id value = num_governor }}
			country_event = { id = wg_aft.2006 }
			break = yes
		}
		else = { 
			change_variable = { which = show_id value = 1 }
			change_variable = { which = reminder2 value = -1 }
		}

		if = {
			limit = { check_variable = { which = show_id value <= num_governor }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = governor
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_2
			}
		}
		if = {
			limit = { check_variable = { which = show_id value = num_governor }}
			country_event = { id = wg_aft.2006 }
			break = yes
		}
		else = { 
			change_variable = { which = show_id value = 1 }
			change_variable = { which = reminder2 value = -1 }
		}

		if = {
			limit = { check_variable = { which = show_id value <= num_governor }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = governor
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_3
			}
		}
		country_event = { id = wg_aft.2006 }
	}
}
# 翻页（科学家）
country_event = {
	id = wg_aft.2002
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		change_variable = { which = show_id value = 1 }
		set_variable = { which = reminder2 value = 2 }
		if = {
			limit = { check_variable = { which = show_id value <= num_scientist }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = scientist
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_1
			}
		}
		if = {
			limit = { check_variable = { which = show_id value = num_scientist }}
			country_event = { id = wg_aft.2006 }
			break = yes
		}
		else = { 
			change_variable = { which = show_id value = 1 }
			change_variable = { which = reminder2 value = -1 }
		}

		if = {
			limit = { check_variable = { which = show_id value <= num_scientist }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = scientist
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_2
			}
		}
		if = {
			limit = { check_variable = { which = show_id value = num_scientist }}
			country_event = { id = wg_aft.2006 }
			break = yes
		}
		else = { 
			change_variable = { which = show_id value = 1 }
			change_variable = { which = reminder2 value = -1 }
		}

		if = {
			limit = { check_variable = { which = show_id value <= num_scientist }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = scientist
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_3
			}
		}
		country_event = { id = wg_aft.2006 }
	}
}
# 翻页（海军上将）
country_event = {
	id = wg_aft.2003
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		change_variable = { which = show_id value = 1 }
		set_variable = { which = reminder2 value = 2 }
		if = {
			limit = { check_variable = { which = show_id value <= num_admiral }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = admiral
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_1
			}
		}
		if = {
			limit = { check_variable = { which = show_id value = num_admiral }}
			country_event = { id = wg_aft.2006 }
			break = yes
		}
		else = { 
			change_variable = { which = show_id value = 1 }
			change_variable = { which = reminder2 value = -1 }
		}

		if = {
			limit = { check_variable = { which = show_id value <= num_admiral }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = admiral
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_2
			}
		}
		if = {
			limit = { check_variable = { which = show_id value = num_admiral }}
			country_event = { id = wg_aft.2006 }
			break = yes
		}
		else = { 
			change_variable = { which = show_id value = 1 }
			change_variable = { which = reminder2 value = -1 }
		}

		if = {
			limit = { check_variable = { which = show_id value <= num_admiral }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = admiral
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_3
			}
		}
		country_event = { id = wg_aft.2006 }
	}
}
# 翻页（陆军将军）
country_event = {
	id = wg_aft.2004
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		change_variable = { which = show_id value = 1 }
		set_variable = { which = reminder2 value = 2 }
		if = {
			limit = { check_variable = { which = show_id value <= num_general }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = general
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_1
			}
		}
		if = {
			limit = { check_variable = { which = show_id value = num_general }}
			country_event = { id = wg_aft.2006 }
			break = yes
		}
		else = { 
			change_variable = { which = show_id value = 1 }
			change_variable = { which = reminder2 value = -1 }
		}

		if = {
			limit = { check_variable = { which = show_id value <= num_general }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = general
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_2
			}
		}
		if = {
			limit = { check_variable = { which = show_id value = num_general }}
			country_event = { id = wg_aft.2006 }
			break = yes
		}
		else = { 
			change_variable = { which = show_id value = 1 }
			change_variable = { which = reminder2 value = -1 }
		}

		if = {
			limit = { check_variable = { which = show_id value <= num_general }}
			random_owned_leader = { # 这页的第一名领袖
				limit = { 
					leader_class = general
					check_variable = { which = show_id value = ROOT }
				}
				save_event_target_as = leader_tobe_show_3
			}
		}
		country_event = { id = wg_aft.2006 }
	}
}

country_event = {
	id = wg_aft.2005
	title = wg_aft.2005.name
	desc = wg_aft.2005.desc
	picture = GFX_evt_wsg_no_video
	is_triggered_only = yes
	
	trigger = {
		OR = {
			FROM = { is_same_value = ROOT }
			check_affection_event_active_diplo = no
		}
	}

	option = { #查看总督的好感度
		name = wg_aft.2005.a
		trigger = {
			check_variable = { which = num_governor value > 0 }
		}
		hidden_effect = {
			set_variable = { which = leader_class_showing value = 1 }
			set_variable = { which = show_id value = 0 }
			country_event = { id = wg_aft.2001 }
		}
	}
	option = { #查看科学家的好感度
		trigger = {
			check_variable = { which = num_scientist value > 0 }
		}
		name = wg_aft.2005.b
		hidden_effect = {
			set_variable = { which = leader_class_showing value = 2 }
			set_variable = { which = show_id value = 0 }
			country_event = { id = wg_aft.2002 }
		}
	}
	option = { #查看海军上将的好感度
		trigger = {
			check_variable = { which = num_admiral value > 0 }
		}
		name = wg_aft.2005.c
		hidden_effect = {
			set_variable = { which = leader_class_showing value = 3 }
			set_variable = { which = show_id value = 0 }
			country_event = { id = wg_aft.2003 }
		}
	}
	option = { #查看陆军将军的好感度
		trigger = {
			check_variable = { which = num_general value > 0 }
		}
		name = wg_aft.2005.d
		hidden_effect = {
			set_variable = { which = leader_class_showing value = 4 }
			set_variable = { which = show_id value = 0 }
			country_event = { id = wg_aft.2004 }
		}
	}
	option = { #查看统治者的好感度
		name = wg_aft.2005.e
		hidden_effect = {
			set_variable = { which = selected_check_affection_leader value = 1 }
			country_event = { id = wg_aft.2007 }
		}
	}
	option = { #查看大小姐的好感度
		name = wg_aft.2005.f
		trigger = {
			has_country_flag = gain_wsg_lady
		}
		hidden_effect = {
			calculate_special_leader_affection_to_level_up = { LEADER = lady }
			set_variable = { which = selected_check_affection_leader value = 2 }
			country_event = { id = wg_aft.2007 }
		}
	}
	option = { #查看岛风的好感度
		name = wg_aft.2005.h
		trigger = { has_country_flag = get_wsg_shimakaze }
		hidden_effect = {
			calculate_special_leader_affection_to_level_up = { LEADER = shimakaze }
			set_variable = { which = selected_check_affection_leader value = 3 }
			country_event = { id = wg_aft.2007 }
		}
	}
	option = { #查看灰风的好感度
		name = wg_aft.2005.i
		trigger = {
			is_vaild_gray_owner = yes
		}
		hidden_effect = {
			calculate_special_leader_affection_to_level_up = { LEADER = gray }
			set_variable = { which = selected_check_affection_leader value = 4 }
			country_event = { id = wg_aft.2007 }
		}
	}
	option = { #查看泡泡的好感度
		name = wg_aft.2005.j
		trigger = {
			has_country_flag = modified_bubbles
			bubbles_available = yes
		}
		hidden_effect = {
			calculate_special_leader_affection_to_level_up = { LEADER = bubbles }
			set_variable = { which = selected_check_affection_leader value = 5 }
			country_event = { id = wg_aft.2007 }
		}
	}
	option = { #查看屑狐狸的好感度
		name = wg_aft.2005.k
		trigger = {
			has_country_flag = has_afk_Sharan
		}
		hidden_effect = {
			calculate_special_leader_affection_to_level_up = { LEADER = Sharan }
			set_variable = { which = selected_check_affection_leader value = 6 }
			country_event = { id = wg_aft.2007 }
		}
	}
	option = { #查看屑夕立的好感度
		name = wg_aft.2005.l
		trigger = {
			has_country_flag = has_kc_yuudaichi
		}
		hidden_effect = {
			calculate_special_leader_affection_to_level_up = { LEADER = yuudaichi }
			set_variable = { which = selected_check_affection_leader value = 7 }
			country_event = { id = wg_aft.2007 }
		}
	}
	option = { #查看以太龙的好感度
		name = wg_aft.2005.m
		trigger = {
			has_country_flag = wg_dragon_owner
		}
		hidden_effect = {
			calculate_special_leader_affection_to_level_up = { LEADER = wg_dragon }
			set_variable = { which = selected_check_affection_leader value = 8 }
			country_event = { id = wg_aft.2007 }
		}
	}
	option = { #退出
		name = wg_aft.2005.g
		default_hide_option = yes
	}
}

country_event = {
	id = wg_aft.2006
	title = wg_aft.2006.name
	picture = GFX_evt_wsg_no_video
	is_triggered_only = yes

	desc = { # 1N 
		trigger = {
			check_variable = { which = reminder2 value = 2 }
			NOT = { event_target:leader_tobe_show_1 = { has_leader_flag = married }}
		}
		text = wg_aft.2006.desc.n
	}
	desc = { # 1Y
		trigger = {
			check_variable = { which = reminder2 value = 2 }
			event_target:leader_tobe_show_1 = { has_leader_flag = married }
		}
		text = wg_aft.2006.desc.y
	}
	desc = { # 1N 2N
		trigger = {
			check_variable = { which = reminder2 value = 1 }
			NOR = {
				event_target:leader_tobe_show_1 = { has_leader_flag = married }
				event_target:leader_tobe_show_2 = { has_leader_flag = married }
			}
		}
		text = wg_aft.2006.desc.nn
	}
	desc = { # 1Y 2N
		trigger = {
			check_variable = { which = reminder2 value = 1 }
			event_target:leader_tobe_show_1 = { has_leader_flag = married }
			NOT = { event_target:leader_tobe_show_2 = { has_leader_flag = married }}
		}
		text = wg_aft.2006.desc.yn
	}
	desc = { # 1N 2Y
		trigger = {
			check_variable = { which = reminder2 value = 1 }
			NOT = { event_target:leader_tobe_show_1 = { has_leader_flag = married }}
			event_target:leader_tobe_show_2 = { has_leader_flag = married }
		}
		text = wg_aft.2006.desc.ny
	}
	desc = { # 1Y 2Y
		trigger = {
			check_variable = { which = reminder2 value = 1 }
			event_target:leader_tobe_show_1 = { has_leader_flag = married }
			event_target:leader_tobe_show_2 = { has_leader_flag = married }
		}
		text = wg_aft.2006.desc.yy
	}
	desc = { # 1N 2N 3N
		trigger = {
			check_variable = { which = reminder2 value < 1 }
			NOR = { 
				event_target:leader_tobe_show_1 = { has_leader_flag = married }
				event_target:leader_tobe_show_2 = { has_leader_flag = married }
				event_target:leader_tobe_show_3 = { has_leader_flag = married }
			}
		}
		text = wg_aft.2006.desc.a
	}
	desc = { # 1Y 2N 3N
		trigger = {
			check_variable = { which = reminder2 value < 1 }
			event_target:leader_tobe_show_1 = { has_leader_flag = married }
			NOR = { 
				event_target:leader_tobe_show_2 = { has_leader_flag = married }
				event_target:leader_tobe_show_3 = { has_leader_flag = married }
			}
		}
		text = wg_aft.2006.desc.b
	}
	desc = { # 1N 2Y 3N
		trigger = {
			check_variable = { which = reminder2 value < 1 }
			event_target:leader_tobe_show_2 = { has_leader_flag = married }
			NOR = { 
				event_target:leader_tobe_show_1 = { has_leader_flag = married }
				event_target:leader_tobe_show_3 = { has_leader_flag = married }
			}
		}
		text = wg_aft.2006.desc.c
	}
	desc = { # 1N 2N 3Y
		trigger = {
			check_variable = { which = reminder2 value < 1 }
			NOR = { 
				event_target:leader_tobe_show_1 = { has_leader_flag = married }
				event_target:leader_tobe_show_2 = { has_leader_flag = married }
			}
			event_target:leader_tobe_show_3 = { has_leader_flag = married }
		}
		text = wg_aft.2006.desc.d
	}
	desc = { # 1Y 2Y 3N
		trigger = {
			check_variable = { which = reminder2 value < 1 }
			event_target:leader_tobe_show_1 = { has_leader_flag = married }
			event_target:leader_tobe_show_2 = { has_leader_flag = married }
			NOT = { event_target:leader_tobe_show_3 = { has_leader_flag = married }}
		}
		text = wg_aft.2006.desc.e
	}
	desc = { # 1Y 2N 3Y
		trigger = {
			check_variable = { which = reminder2 value < 1 }
			event_target:leader_tobe_show_1 = { has_leader_flag = married }
			NOT = { event_target:leader_tobe_show_2 = { has_leader_flag = married }}
			event_target:leader_tobe_show_3 = { has_leader_flag = married }
		}
		text = wg_aft.2006.desc.f
	}
	desc = { # 1N 2Y 3Y
		trigger = {
			check_variable = { which = reminder2 value < 1 }
			NOT = { event_target:leader_tobe_show_1 = { has_leader_flag = married }}
			event_target:leader_tobe_show_2 = { has_leader_flag = married }
			event_target:leader_tobe_show_3 = { has_leader_flag = married }
		}
		text = wg_aft.2006.desc.g
	}
	desc = { # 1Y 2Y 3Y
		trigger = {
			check_variable = { which = reminder2 value < 1 }
			event_target:leader_tobe_show_1 = { has_leader_flag = married }
			event_target:leader_tobe_show_2 = { has_leader_flag = married }
			event_target:leader_tobe_show_3 = { has_leader_flag = married }
		}
		text = wg_aft.2006.desc.h
	}

	option = { #上一页
		trigger = {
			check_variable = { which = show_id value > 3 }
		}
		name = wg_aft.18.a
		hidden_effect = { 
			if = {
				limit = { check_variable = { which = show_id value > 6 }}
				change_variable = { which = show_id value = -6 }
				change_variable = { which = show_id value = reminder2 } 
			}
			if = {
				limit = { check_variable = { which = show_id value <= 6 }}
				set_variable = { which = show_id value = 0 }
			}
			if = {
				limit = { check_variable = { which = leader_class_showing value = 1 }}
				country_event = { id = wg_aft.2001 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = leader_class_showing value = 2 }}
				country_event = { id = wg_aft.2002 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = leader_class_showing value = 3 }}
				country_event = { id = wg_aft.2003 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = leader_class_showing value = 4 }}
				country_event = { id = wg_aft.2004 }
				break = yes
			}
		} 
	}
	option = { #下一页
		trigger = {
			OR = {
				AND = {
					check_variable = { which = leader_class_showing value = 1 }
					check_variable = { which = show_id value < num_governor }
				}
				AND = {
					check_variable = { which = leader_class_showing value = 2 }
					check_variable = { which = show_id value < num_scientist }
				}
				AND = {
					check_variable = { which = leader_class_showing value = 3 }
					check_variable = { which = show_id value < num_admiral }
				}
				AND = {
					check_variable = { which = leader_class_showing value = 4 }
					check_variable = { which = show_id value < num_general }
				}
			}
		}
		name = wg_aft.18.b
		hidden_effect = { 
			if = {
				limit = { check_variable = { which = leader_class_showing value = 1 }}
				country_event = { id = wg_aft.2001 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = leader_class_showing value = 2 }}
				country_event = { id = wg_aft.2002 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = leader_class_showing value = 3 }}
				country_event = { id = wg_aft.2003 }
				break = yes
			}
			if = {
				limit = { check_variable = { which = leader_class_showing value = 4 }}
				country_event = { id = wg_aft.2004 }
				break = yes
			}
		} 
	}
	option = { #返回主菜单
		name = wg_aft.2006.a
		hidden_effect = {
			set_variable = { which = show_id value = 0 }
			country_event = { id = wg_aft.2005 }
		}
	}
	option = { #退出
		name = wg_aft.2005.g
		default_hide_option = yes
	}
}

# 查看特殊领袖好感
country_event = {
	id = wg_aft.2007
	title = wg_aft.2007.name
	picture = GFX_evt_wsg_no_video
	is_triggered_only = yes

	desc = {
		trigger = { 
			hidden_trigger = { has_married_selected_leader = no }
			text = wg_aft.2007.desc.a
		}
	}
	desc = {
		trigger = { 
			hidden_trigger = { has_married_selected_leader = yes }
			text = wg_aft.2007.desc.b
		}
	}

	after = { 
		hidden_effect = {
			set_variable = { which = selected_check_affection_leader value = 0 }
		}
	}

	option = { #返回主菜单
		name = wg_aft.2006.a
		hidden_effect = {
			country_event = { id = wg_aft.2005 }
		}
	}
	option = { #退出
		name = wg_aft.2005.g
		default_hide_option = yes
	}
}

# 复活普通领袖
country_event = {
	id = wg_aft.20
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		FROM = { 
			is_wg_leader = yes
			has_leader_flag = can_revive
			NOT = { has_leader_flag = wsg_event_leader }
		}
	}

	immediate = {
		set_variable = { which = affection value = FROM }
		set_variable = { which = affection_level value = FROM }
		every_playable_country = { # 全局变量，所有国家变量需一起变化，以防复活错领袖
			change_variable = { which = resurrect_leader_count value = 1 }
		}
		save_event_target_as = revive_leader_country
		FROM = { 
			if = {
				limit = { leader_class = governor }
				ROOT = { 
					clone_leader = { target = PREV class = governor 
					effect = { 
						set_variable = { which = resurrect_leader_count value = event_target:revive_leader_country }
						set_variable = { which = resurrect_leader value = resurrect_leader_count }
						set_variable = { which = resurrect_leader_count value = 0 }
						set_variable = { which = affection value = event_target:revive_leader_country }
						set_variable = { which = affection_level value = event_target:revive_leader_country }
						subtract_variable = { which = affection value = @governor_affection_to_lv2 }
						reset_normal_leader_affection_level = { LEADER_CLASS = governor }
						save_event_target_as = revive_leader
						exile_leader_with_variable = { VARIABLE = resurrect_leader }
					}}
					country_event = { id = wg_aft.29 days = 5 random = 5 }#复活事件
				}
				break = yes
			}
			if = {
				limit = { leader_class = scientist }
				ROOT = { 
					clone_leader = { target = PREV class = scientist 
					effect = { 
						set_variable = { which = resurrect_leader_count value = event_target:revive_leader_country }
						set_variable = { which = resurrect_leader value = resurrect_leader_count }
						set_variable = { which = resurrect_leader_count value = 0 }
						set_variable = { which = affection value = event_target:revive_leader_country }
						set_variable = { which = affection_level value = event_target:revive_leader_country }
						subtract_variable = { which = affection value = @scientist_affection_to_lv2 }
						reset_normal_leader_affection_level = { LEADER_CLASS = scientist }
						save_event_target_as = revive_leader
						exile_leader_with_variable = { VARIABLE = resurrect_leader }
					}}
					country_event = { id = wg_aft.29 days = 5 random = 5 }#复活事件
				}
				break = yes
			}
			if = {
				limit = { leader_class = admiral }
				ROOT = { 
					clone_leader = { target = PREV class = admiral 
					effect = { 
						set_variable = { which = resurrect_leader_count value = event_target:revive_leader_country }
						set_variable = { which = resurrect_leader value = resurrect_leader_count }
						set_variable = { which = resurrect_leader_count value = 0 }
						set_variable = { which = affection value = event_target:revive_leader_country }
						set_variable = { which = affection_level value = event_target:revive_leader_country }
						subtract_variable = { which = affection value = @admiral_affection_to_lv2 }
						reset_normal_leader_affection_level = { LEADER_CLASS = admiral }
						save_event_target_as = revive_leader
						exile_leader_with_variable = { VARIABLE = resurrect_leader }
					}}
					country_event = { id = wg_aft.29 days = 5 random = 5 }#复活事件
				}
				break = yes
			}
			if = {
				limit = { leader_class = general }
				ROOT = { 
					clone_leader = { target = PREV class = general 
					effect = { 
						set_variable = { which = resurrect_leader_count value = event_target:revive_leader_country }
						set_variable = { which = resurrect_leader value = resurrect_leader_count }
						set_variable = { which = resurrect_leader_count value = 0 }
						set_variable = { which = affection value = event_target:revive_leader_country }
						set_variable = { which = affection_level value = event_target:revive_leader_country }
						subtract_variable = { which = affection value = @general_affection_to_lv2 }
						reset_normal_leader_affection_level = { LEADER_CLASS = general }
						save_event_target_as = revive_leader
						exile_leader_with_variable = { VARIABLE = resurrect_leader }
					}}
					country_event = { id = wg_aft.29 days = 5 random = 5 }#复活事件
				}
				break = yes
			}
			if = { #统治者直接使用国家set leader
				limit = { leader_class = ruler }
				ROOT = {
					clone_leader = { target = PREV class = ruler 
					effect = { 
						set_variable = { which = resurrect_leader_count value = event_target:revive_leader_country }
						set_variable = { which = resurrect_leader value = resurrect_leader_count }
						set_variable = { which = resurrect_leader_count value = 0 }
						set_variable = { which = affection value = event_target:revive_leader_country }
						set_variable = { which = affection_level value = event_target:revive_leader_country }
						subtract_variable = { which = affection value = @ruler_affection_to_lv2 }
						reset_ruler_affection_level = yes
						save_event_target_as = revive_leader
						exile_leader_with_variable = { VARIABLE = resurrect_leader }
					}}
					country_event = { id = wg_aft.32 days = 5 random = 5 } #统治者专用复活事件
				}
				break = yes
			}
		}
		if = { #提醒事件
			limit = { NOT = { has_country_flag = has_married_leader_dead }}
			set_country_flag = has_married_leader_dead
			country_event = { id = wg_aft.22 days = 1 }
		}
		else = {
			country_event = { id = wg_aft.30 days = 1}
		}
		set_variable = { which = affection value = 0 }
		set_variable = { which = affection_level value = 0 }
	}
}

# 复活事件领袖
country_event = {
	id = wg_aft.21
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		FROM = { 
			has_leader_flag = wsg_event_leader
		}
	}

	immediate = {
		every_playable_country = { # 全局变量，所有国家变量需一起变化，以防复活错领袖
			change_variable = { which = resurrect_leader_count value = 1 }
		}
		set_variable = { which = affection value = FROM }
		set_variable = { which = affection_level value = FROM }
		save_event_target_as = resurrect_leader_country
		FROM = { 
			if = { #劳模
				limit = { has_leader_flag = overtime_yamato }
				ROOT = { 
					country_event = { id = wg_aft.23 days = 180 random = 180 }
					clone_leader = { target = PREV class = governor 
						effect = { 
							set_leader_flag = Yamato 
							set_variable = { which = resurrect_leader_count value = event_target:resurrect_leader_country }
							set_variable = { which = resurrect_leader value = resurrect_leader_count }
							set_variable = { which = resurrect_leader_count value = 0 }
							set_variable = { which = affection value = event_target:resurrect_leader_country }
							set_variable = { which = affection_level value = event_target:resurrect_leader_country }
							subtract_variable = { which = affection value = @governor_affection_to_lv2 }
							reset_normal_leader_affection_level = { LEADER_CLASS = governor }
							exile_leader_with_variable = { VARIABLE = resurrect_leader }
						} 
					}
				}
				break = yes
			}
			if = { #老罗
				limit = { has_trait = leader_trait_admiral_Rodney }
				ROOT = { 
					country_event = { id = wg_aft.24 days = 180 random = 180 }
					clone_leader = { target = PREV class = admiral 
						effect = { 
							set_leader_flag = Rodney 
							set_variable = { which = resurrect_leader_count value = event_target:resurrect_leader_country }
							set_variable = { which = resurrect_leader value = resurrect_leader_count }
							set_variable = { which = resurrect_leader_count value = 0 }
							set_variable = { which = affection value = event_target:resurrect_leader_country }
							set_variable = { which = affection_level value = event_target:resurrect_leader_country }
							subtract_variable = { which = affection value = @admiral_affection_to_lv2 }
							reset_normal_leader_affection_level = { LEADER_CLASS = admiral }
							exile_leader_with_variable = { VARIABLE = resurrect_leader }
						} 
					}
				}
				break = yes
			}
			if = { #艾拉
				limit = { has_trait = leader_trait_governor_Ella }
				ROOT = { 
					country_event = { id = wg_aft.25 days = 180 random = 180}
					clone_leader = { target = PREV class = governor 
						effect = { 
							set_leader_flag = Ella 
							set_variable = { which = resurrect_leader_count value = event_target:resurrect_leader_country }
							set_variable = { which = resurrect_leader value = resurrect_leader_count }
							set_variable = { which = resurrect_leader_count value = 0 }
							set_variable = { which = affection value = event_target:resurrect_leader_country }
							set_variable = { which = affection_level value = event_target:resurrect_leader_country }
							subtract_variable = { which = affection value = @governor_affection_to_lv2 }
							reset_normal_leader_affection_level = { LEADER_CLASS = governor }
							exile_leader_with_variable = { VARIABLE = resurrect_leader }
						} 
					}
				}
				break = yes
			}
			if = { #桑提
				limit = { has_trait = leader_trait_governor_santee }
				ROOT = { 
					country_event = { id = wg_aft.26 days = 180 random = 180 }
					clone_leader = { target = PREV class = governor 
						effect = { 
							set_leader_flag = Santee 
							set_variable = { which = resurrect_leader_count value = event_target:resurrect_leader_country }
							set_variable = { which = resurrect_leader value = resurrect_leader_count }
							set_variable = { which = resurrect_leader_count value = 0 }
							set_variable = { which = affection value = event_target:resurrect_leader_country }
							set_variable = { which = affection_level value = event_target:resurrect_leader_country }
							subtract_variable = { which = affection value = @governor_affection_to_lv2 }
							reset_normal_leader_affection_level = { LEADER_CLASS = governor }
							exile_leader_with_variable = { VARIABLE = resurrect_leader }
						} 
					}
				}
				break = yes
			}
			if = { #花生
				limit = { has_trait = leader_trait_general_washington_axe }
				ROOT = { 
					country_event = { id = wg_aft.27 days = 180 random = 180 }
					clone_leader = { target = PREV class = general 
						effect = { 	
							set_leader_flag = Washington 
							set_variable = { which = resurrect_leader_count value = event_target:resurrect_leader_country }
							set_variable = { which = resurrect_leader value = resurrect_leader_count }
							set_variable = { which = resurrect_leader_count value = 0 }
							set_variable = { which = affection value = event_target:resurrect_leader_country }
							set_variable = { which = affection_level value = event_target:resurrect_leader_country }
							subtract_variable = { which = affection value = @general_affection_to_lv2 }
							reset_normal_leader_affection_level = { LEADER_CLASS = general }
							exile_leader_with_variable = { VARIABLE = resurrect_leader }
						} 
					}
				}
				break = yes
			}
			if = { #太太
				limit = { has_trait = leader_trait_ruler_lexington }
				ROOT = { 
					country_event = { id = wg_aft.28 days = 5 random = 5 }
					clone_leader = { target = PREV class = ruler 
						effect = { 
							exile_leader_as = Lexington 
							set_variable = { which = resurrect_leader_count value = event_target:resurrect_leader_country }
							set_variable = { which = resurrect_leader value = resurrect_leader_count }
							set_variable = { which = resurrect_leader_count value = 0 }
							set_variable = { which = affection value = event_target:resurrect_leader_country }
							set_variable = { which = affection_level value = event_target:resurrect_leader_country }
							subtract_variable = { which = affection value = @ruler_affection_to_lv2 }
							reset_ruler_affection_level = yes
							exile_leader_with_variable = { VARIABLE = resurrect_leader }
						}
					} 
				}
				break = yes
			}
			if = { #乜提督
				limit = { has_trait = leader_trait_admiral_NieAdmiral }
				ROOT = { 
					country_event = { id = wg_aft.1020 days = 180 random = 180 }
					clone_leader = { target = PREV class = admiral 
						effect = { 
							set_leader_flag = nieAdmiral 
							set_variable = { which = resurrect_leader_count value = event_target:resurrect_leader_country }
							set_variable = { which = resurrect_leader value = resurrect_leader_count }
							set_variable = { which = resurrect_leader_count value = 0 }
							set_variable = { which = affection value = event_target:resurrect_leader_country }
							set_variable = { which = affection_level value = event_target:resurrect_leader_country }
							subtract_variable = { which = affection value = @admiral_affection_to_lv2 }
							reset_normal_leader_affection_level = { LEADER_CLASS = admiral }
							exile_leader_with_variable = { VARIABLE = resurrect_leader }
						}
					} 
				}
				break = yes
			}
		}
		set_variable = { which = affection value = 0 }
		set_variable = { which = affection_level value = 0 }
	}
}

# 普通领袖复活事件
country_event = {
	id = wg_aft.22
	title = wg_aft.22.name
	desc = wg_aft.22.desc
	picture = GFX_evt_revive_leader
	is_triggered_only = yes

	option = {
		name = wg_aft.22.a
	}
	option = {
		name = wg_aft.22.b
	}
}

# 劳模复活事件
country_event = {
	id = wg_aft.23
	title = wg_aft.23.name
	desc = wg_aft.23.desc
	picture = GFX_evt_revive_yamato
	is_triggered_only = yes

	immediate = {
		country_event = { id = wg_aft.1021 }
	}

	option = {
		name = wg_aft.23.a
	}
}

# 劳模复活事件
country_event = {
	id = wg_aft.24
	title = wg_aft.24.name
	desc = wg_aft.24.desc
	picture = GFX_evt_revive_rodney
	is_triggered_only = yes

	immediate = {
		country_event = { id = wg_aft.1021 }
	}

	option = {
		name = wg_aft.24.a
	}
}

# 艾拉复活事件
country_event = {
	id = wg_aft.25
	title = wg_aft.25.name
	desc = wg_aft.25.desc
	picture = GFX_evt_wsg_Istanbul
	show_sound = event_wg_lightning
	is_triggered_only = yes

	immediate = {
		country_event = { id = wg_aft.1021 }
	}

	option = {
		name = wg_aft.25.a
	}
}

# 桑提复活事件
country_event = {
	id = wg_aft.26
	title = wg_aft.26.name
	desc = wg_aft.26.desc
	picture = GFX_evt_revive_santee
	is_triggered_only = yes

	immediate = {
		country_event = { id = wg_aft.1021 }
	}

	option = {
		name = wg_aft.26.a
	}
}

# 花生复活事件
country_event = {
	id = wg_aft.27
	title = wg_aft.27.name
	desc = wg_aft.27.desc
	picture = GFX_evt_revive_washington
	is_triggered_only = yes

	immediate = {
		country_event = { id = wg_aft.1021 }
	}

	option = {
		name = EXCELLENT
	}
}

# 太太复活事件
country_event = {
	id = wg_aft.28
	title = wg_aft.28.name
	desc = wg_aft.28.desc
	picture = GFX_evt_revive_lex
	is_triggered_only = yes

	immediate = {
		every_playable_country = {
			change_variable = { which = resurrect_leader value = 1 }
		}
		set_leader_with_variable = { VARIABLE = resurrect_leader }
		remove_array_variables = { ARRAY = resurrect_leader }
		ruler = {
			set_leader_flag = wsg_event_leader
			set_leader_flag = married
			set_variable = { which = resurrect_leader value = 0 }
			reset_ruler_affection_level = yes
			set_age = 17
			change_leader_portrait = wsg29_3
		}
		if = {
			limit = { check_variable = { which = resurrect_leader value = resurrect_leader_count }}
			every_playable_country = { # 还原全局变量，以免变量超出两位数上限
				change_variable = { which = resurrect_leader value = 0 }
				change_variable = { which = resurrect_leader_count value = 0 }
			}
		}
		set_country_flag = set_lex_as_ruler
	}

	option = {
		name = EXCELLENT
	}
}

# 乜提督复活事件
country_event = {
	id = wg_aft.1020
	title = wg_aft.1020.name
	desc = wg_aft.1020.desc
	picture = GFX_evt_revive_leader
	is_triggered_only = yes

	immediate = {
		country_event = { id = wg_aft.1021 }
	}

	option = {
		name = ASTOUNDING
	}
}

# 非统治者复活事件（隐藏）
country_event = {
	id = wg_aft.29
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_playable_country = {
			change_variable = { which = resurrect_leader value = 1 }
		}
		if = {
			limit = { exists = capital_scope }
			capital_scope = { save_event_target_as = spawn_fleet_location }
		} else = {
			random_owned_fleet = { save_event_target_as = spawn_fleet_location }
		}
		create_fleet = {
			name = "revive leader"
			effect = {
				set_owner = root
				create_ship = {
					name = "revive_leader_ship"
					design = "NAME_wg_naming_ship"
					upgradable = no
				}
				set_variable = { which = resurrect_leader value = root }
				set_location = event_target:spawn_fleet_location
				set_event_locked = yes
				fleet_event = { id = wg_aft.33 }
			}
		}
	}
}

# 非统治者复活事件
fleet_event = {
	id = wg_aft.33
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_leader_with_variable = { VARIABLE = resurrect_leader }
		owner = { 
			random_owned_leader = {
				limit = { check_variable = { which = resurrect_leader value = root }}
				remove_leader_flag = can_revive #以防万一
				set_leader_flag = married
				set_leader_flag = revive_leader 
				set_variable = { which = resurrect_leader value = 0 }
			}
			if = {
				limit = { check_variable = { which = resurrect_leader value = resurrect_leader_count }}
				every_playable_country = { # 还原全局变量，以免变量超出两位数上限
					change_variable = { which = resurrect_leader value = 0 }
					change_variable = { which = resurrect_leader_count value = 0 }
				}
			}
		}
		delete_fleet = {
			target = root
			kill_leader = no
			destroy_template = yes
		}
	}
}

# 无法复活提醒事件
country_event = {
	id = wg_aft.30
	title = wg_aft.22.name
	desc = wg_aft.30.desc
	picture = GFX_evt_revive_leader
	is_triggered_only = yes

	option = {
		name = wg_aft.22.b
	}
}

# 领袖专用
country_event = {
	id = wg_aft.32
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_playable_country = {
			change_variable = { which = resurrect_leader value = 1 }
		}
		set_leader_with_variable = { VARIABLE = resurrect_leader }
		remove_array_variables = { ARRAY = resurrect_leader }
		ruler = {
			set_leader_flag = revive_leader
			set_leader_flag = married
			remove_leader_flag = can_revive
			set_variable = { which = resurrect_leader value = 0 }
		}
		remove_country_flag = set_lex_as_ruler #以防万一
		if = {
			limit = { check_variable = { which = resurrect_leader value = resurrect_leader_count }}
			every_playable_country = { # 还原全局变量，以免变量超出两位数上限
				change_variable = { which = resurrect_leader value = 0 }
				change_variable = { which = resurrect_leader_count value = 0 }
			}
		}
	}
}

# 事件领袖复活事件
country_event = {
	id = wg_aft.1021
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_playable_country = {
			change_variable = { which = resurrect_leader value = 1 }
		}
		if = {
			limit = { exists = capital_scope }
			capital_scope = { save_event_target_as = spawn_fleet_location }
		} else = {
			random_owned_fleet = { save_event_target_as = spawn_fleet_location }
		}
		create_fleet = {
			name = "revive leader"
			effect = {
				set_owner = root
				create_ship = {
					name = "revive_leader_ship"
					design = "NAME_wg_naming_ship"
					upgradable = no
				}
				set_variable = { which = resurrect_leader value = root }
				set_location = event_target:spawn_fleet_location
				set_event_locked = yes
				fleet_event = { id = wg_aft.1022 }
			}
		}
	}
}

fleet_event = {
	id = wg_aft.1022
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_leader_with_variable = { VARIABLE = resurrect_leader }
		owner = { 
			random_owned_leader = {
				limit = { check_variable = { which = resurrect_leader value = root }}
				set_leader_flag = married
				set_leader_flag = wsg_event_leader
				set_variable = { which = resurrect_leader value = 0 }
			}
			if = {
				limit = { check_variable = { which = resurrect_leader value = resurrect_leader_count }}
				every_playable_country = { # 还原全局变量，以免变量超出两位数上限
					change_variable = { which = resurrect_leader value = 0 }
					change_variable = { which = resurrect_leader_count value = 0 }
				}
			}
		}
		delete_fleet = {
			target = root
			kill_leader = no
			destroy_template = yes
		}
	}
}

# 已复活过一次，不可再复活
country_event = {
	id = wg_aft.31
	title = wg_aft.31.name
	desc = wg_aft.31.desc
	is_triggered_only = yes

	trigger = {
		FROM = { 
			is_wg_leader = yes
			has_leader_flag = revive_leader
			NOT = { has_leader_flag = can_revive }
		}
	}

	immediate = {
		FROM = { save_event_target_as = pass_leader }
	}

	option = {
		name = wg_aft.31.a
	}
}

#考古完成一个坟加3~8好感
fleet_event = {
	id = wg_aft.34
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = leader
		leader = {
			leader_class = scientist
			is_wg_leader_with_affection_not_full = yes
		}
	}

	immediate = {
		leader = {
			while = { count = 3
				add_scientist_affection_no_check = yes
			}
			if = { # buff加成的额外好感度
				limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
				while = { count = 3
					add_scientist_affection_no_check = yes
				}
			}
			random_list = {
				65 = { 
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					add_scientist_affection_no_check = yes 
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						add_scientist_affection_no_check = yes 
					}
				}
				35 = {}
			}
			random_list = {
				45 = { 
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					while = { count = 2
						add_scientist_affection_no_check = yes 
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						while = { count = 2
							add_scientist_affection_no_check = yes 
						}
					}
				}
				55 = {}
			}
			random_list = {
				35 = { 
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					while = { count = 2
						add_scientist_affection_no_check = yes 
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						while = { count = 2
							add_scientist_affection_no_check = yes 
						}
					}
				}
				65 = {}
			}
			random_list = {
				15 = { 
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					add_scientist_affection_no_check = yes 
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						add_scientist_affection_no_check = yes 
					}
				}
				85 = {}
			}
			switch = {
				trigger = has_leader_flag
				wsg_shimakaze_scientist = { 
					owner = { reset_shimakaze_affection_level = yes }
				}
				wsg_lady_leader = { 
					owner = { reset_lady_affection_level = yes }
				}
				yuudaichi_leader = { 
					owner = { reset_yuudaichi_affection_level = yes }
				}
				default = { reset_normal_leader_affection_level = { LEADER_CLASS = scientist }}
			}
		}
	}
}

# 辅助研究加好感
country_event = {
	id = wg_aft.35
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_planet = {
			limit = { has_modifier = assist_research }
			random_fleet_in_orbit = {
				limit = { 
					exists = leader
					leader = {
						leader_class = scientist
						is_wg_leader_with_affection_not_full = yes
					}
				}
				leader = { 
					switch = {
						trigger = has_leader_flag
						wsg_lady_leader = {
							add_special_scientist_affection_monthly = { LEADER = lady LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_lady }
						}
						wsg_shimakaze_leader = {
							add_special_scientist_affection_monthly = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
						}
						yuudaichi_leader = {
							add_special_scientist_affection_monthly = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
						}
						default = {
							add_scientist_affection_monthly = yes 
						}
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						switch = {
							trigger = has_leader_flag
							wsg_lady_leader = {
								add_special_scientist_affection_monthly = { LEADER = lady LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_lady }
							}
							wsg_shimakaze_leader = {
								add_special_scientist_affection_monthly = { LEADER = shimakaze LEADER_CLASS = scientist MARRIED_FLAG = married_wsg_shimakaze }
							}
							yuudaichi_leader = {
								add_special_scientist_affection_monthly = { LEADER = yuudaichi LEADER_CLASS = scientist MARRIED_FLAG = married_yuudaichi }
							}
							default = {
								add_scientist_affection_monthly = yes 
							}
						}
					}
				}
			}
		}
	}
}

#检查好感度数值和等级
country_event = {
	id = wg_aft.100
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = "abnormal_leader_affection" value = 0 }
		every_owned_leader = {
			limit = {
				is_wg_leader = yes
			}
			calculate_affection_to_level_up = yes
			if = {
				limit = { check_variable = { which = "affection_to_level_up" value < 1 }}
				set_leader_flag = abnormal_affection
			}
			if = {
				limit = {
					has_multiple_affection_traits = yes
				}
				set_leader_flag = abnormal_affection
			}
		}
		while = {
			limit = { any_owned_leader = { has_leader_flag = abnormal_affection }}
			random_owned_leader = {
				limit = { has_leader_flag = abnormal_affection }
				remove_leader_flag = abnormal_affection
				switch = {
					trigger = leader_class
					governor = { reset_normal_leader_affection_level = { LEADER_CLASS = governor } }
					scientist = { reset_normal_leader_affection_level = { LEADER_CLASS = scientist } }
					admiral = { reset_normal_leader_affection_level = { LEADER_CLASS = admiral } }
					general = { reset_normal_leader_affection_level = { LEADER_CLASS = general } }
					ruler = { reset_ruler_affection_level = yes }
				}
			}
		}
		if = {
			limit = { has_country_flag = gain_wsg_lady }
			reset_lady_affection_level = yes
		}
		if = {
			limit = { has_country_flag = get_wsg_shimakaze }
			reset_shimakaze_affection_level = yes
		}
		if = {
			limit = { is_vaild_gray_owner = yes }
			reset_gray_affection_level = yes
			random_owned_leader = {
				limit = { has_leader_flag = 灰风领袖 }
				change_leader_portrait = GrayTempest
				check_and_remove_normal_leader_affection_traits = yes
			}
		}
		if = {
			limit = { has_country_flag = wg_dragon_owner }
			reset_wg_dragon_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_afk_Sharan }
			reset_Sharan_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_kc_yuudaichi }
			reset_yuudaichi_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_afk_Pellaeon }
			reset_Pellaeon_affection_level = yes
		}
		if = {
			limit = { OR = {
				has_country_flag = can_communicate_bubbles
				has_country_flag = modified_bubbles 
			}}
			reset_bubbles_affection_level = yes
		}
	}
}

# 移除不应存在的好感度
country_event = {
	id = wg_aft.101
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_leader = {
			limit = { has_affection_trait = yes }
			switch = {
				trigger = leader_class
				governor = { remove_normal_leader_affection_trait = { LEADER_CLASS = governor } }
				scientist = { remove_normal_leader_affection_trait = { LEADER_CLASS = scientist } }
				admiral = { remove_normal_leader_affection_trait = { LEADER_CLASS = admiral } }
				general = { remove_normal_leader_affection_trait = { LEADER_CLASS = general } }
				ruler = { remove_ruler_affection_trait = yes }
			}
			set_variable = { which = affection value = 0 }
			set_variable = { which = affection_level value = 0 }
		}
		if = {
			limit = { has_country_flag = gain_wsg_lady }
			set_variable = { which = lady_affection value = 0 }
			set_variable = { which = lady_affection_level value = 0 }
			reset_lady_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_afk_Sharan }
			set_variable = { which = Sharan_affection value = 0 }
			set_variable = { which = Sharan_affection_level value = 0 }
			reset_Sharan_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_kc_yuudaichi }
			set_variable = { which = yuudaichi_affection value = 0 }
			set_variable = { which = yuudaichi_affection_level value = 0 }
			reset_yuudaichi_affection_level = yes
		}
		if = {
			limit = { has_country_flag = has_afk_Pellaeon }
			set_variable = { which = Pellaeon_affection value = 0 }
			set_variable = { which = Pellaeon_affection_level value = 0 }
			reset_Pellaeon_affection_level = yes
		}
	}
}

# 每月检测有没有捡起了泡泡，并增加好感度
country_event = {
	id = wg_aft.200
	hide_window = yes
	trigger = {
		has_country_flag = amoeba_befriended
		any_owned_fleet = {
			OR = {
				has_fleet_flag = lost_amoeba_fleet@ROOT
				has_fleet_flag = lost_amoeba_adult_fleet@ROOT
				has_fleet_flag = lost_amoeba_centenarian_fleet@ROOT
			}
		}
		bubbles_available = yes
	}
	is_triggered_only = yes
	immediate = {
		random_owned_fleet = {
			limit = { 
				OR = {
					has_fleet_flag = lost_amoeba_fleet@ROOT
					has_fleet_flag = lost_amoeba_adult_fleet@ROOT
					has_fleet_flag = lost_amoeba_centenarian_fleet@ROOT
				}
			}
			random_list = {
				1 = {
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					set_variable = { which = months_no_affection value = 0 }
					if = {
						limit = { exists = leader }
						add_special_leader_affection = {
							LEADER = bubbles LEADER_CLASS = admiral MARRIED_FLAG = married_bubbles
						}
					} else = {
						owner = { add_affection_only_special_leader = { LEADER = bubbles MARRIED_FLAG = married_bubbles }}
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						if = {
							limit = { exists = leader }
							add_special_leader_affection = {
								LEADER = bubbles LEADER_CLASS = admiral MARRIED_FLAG = married_bubbles
							}
						} else = {
							owner = { add_affection_only_special_leader = { LEADER = bubbles MARRIED_FLAG = married_bubbles }}
						}
					}
					check_bubbles_planet_modifiers = yes
				}
				24 = {
					modifier = {
						check_variable = { which = months_no_affection value >= 2 }
						add = -5
					}
					modifier = {
						check_variable = { which = months_no_affection value >= 4 }
						add = -5
					}
					modifier = {
						check_variable = { which = months_no_affection value >= 6 }
						add = -5
					}
					modifier = {
						check_variable = { which = months_no_affection value >= 8 }
						add = -5
					}
					modifier = {
						check_variable = { which = months_no_affection value >= 10 }
						add = -4
					}
					modifier = {
						check_variable = { which = months_no_affection value >= 12 }
						factor = 0
					}
					change_variable = { which = months_no_affection value = 1 }
				}
			}
		}
		if = {
			limit = { 
				NOT = { has_country_flag = bubbles_centenarian }
				any_owned_fleet = {
					has_fleet_flag = lost_amoeba_centenarian_fleet@root
				}
			}
			set_country_flag = bubbles_centenarian
		} else_if = {
			limit = { NOT = { has_country_flag = bubbles_adult }}
			set_country_flag = bubbles_adult
		}
		if = {
			limit = {
				NOR = { 
					has_country_flag = modified_bubbles 
					has_country_flag = give_up_modify_bubbles 
				}
				any_owned_fleet = { OR = {
					has_fleet_flag = lost_amoeba_adult_fleet@root
					has_fleet_flag = lost_amoeba_centenarian_fleet@root
				}}
			}
			if = {
				limit = { 
					OR = {
						has_technology = tech_wsg_genetic_resequencing 
						has_technology = tech_sh_genetic_resequencing 
						has_technology = tech_sh_genetic_resequencing2
						has_technology = tech_genetic_resequencing 
					}
					NOR = { 
						has_special_project = MODIFY_BUBBLES
						has_special_project = MODIFY_BUBBLES2
						has_country_flag = modified_bubbles 
					}
				}
				country_event = { id = wg_bubbles.1 }
			} else_if = {
				limit = {
					has_technology = tech_morphogenetic_field_mastery
					NOR = { 
						has_special_project = MODIFY_BUBBLES
						has_special_project = MODIFY_BUBBLES2
						has_special_project = MODIFY_BUBBLES_SECOND
						has_special_project = MODIFY_BUBBLES_SECOND2
						has_country_flag = modified_bubbles 
						has_country_flag = can_communicate_bubbles
					}
				}
				country_event = { id = wg_bubbles.2 }
			}
		}
	}
}

# 泡泡战斗中增加好感
# 什么？你居然拉泡泡去打仗？鲨了（）
fleet_event = {
	id = wg_aft.201
	hide_window = yes
	trigger = {
		has_fleet_flag = counting_affection
		OR = {
			has_fleet_flag = lost_amoeba_fleet@owner
			has_fleet_flag = lost_amoeba_adult_fleet@owner
			has_fleet_flag = lost_amoeba_centenarian_fleet@owner
		}
		owner = { bubbles_available = yes }
	}
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { is_in_combat = yes }
			random_list = {
				1 = {
					modifier = { # buff加成的额外几率
						owner = { has_modifier = wg_modifier_canteen_affectionUp1 }
						factor = 2
					}
					set_variable = { which = "days_combat_no_affection" value = 0 }
					if = {
						limit = { exists = leader }
						add_special_leader_affection = {
							LEADER = bubbles LEADER_CLASS = admiral MARRIED_FLAG = married_bubbles
						}
					} else = {
						owner = { add_affection_only_special_leader = { LEADER = bubbles MARRIED_FLAG = married_bubbles }}
						check_bubbles_planet_modifiers = yes
					}
					if = { # buff加成的额外好感度
						limit = { owner = { has_modifier = wg_modifier_canteen_affectionUp2 }}
						if = {
							limit = { exists = leader }
							add_special_leader_affection = {
								LEADER = bubbles LEADER_CLASS = admiral MARRIED_FLAG = married_bubbles
							}
						} else = {
							owner = { add_affection_only_special_leader = { LEADER = bubbles MARRIED_FLAG = married_bubbles }}
							check_bubbles_planet_modifiers = yes
						}
					}
				}
				24 = {
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 4 }
						add = -5
					}
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 8 }
						add = -5
					}
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 12 }
						add = -5
					}
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 18 }
						add = -5
					}
					modifier = {
						check_variable = { which = "days_combat_no_affection" value >= 30 }
						factor = 0
					}
					change_variable = { which = "days_combat_no_affection" value = 1 }
				}
			}
			fleet_event = { id = wg_aft.201 days = 1 }
		}
		else = {
			remove_fleet_flag = counting_affection
			set_variable = { which = "days_combat_no_affection" value = 0 }
		}
	}
}

fleet_event = {
	id = wg_aft.202
	hide_window = yes
	trigger = {
		owner = { bubbles_available = yes }
		OR = {
			has_fleet_flag = lost_amoeba_fleet@owner
			has_fleet_flag = lost_amoeba_adult_fleet@owner
			has_fleet_flag = lost_amoeba_centenarian_fleet@owner
		}
	}
	is_triggered_only = yes
	immediate = {
		owner = { every_owned_planet = {
			remove_all_bubbles_planet_modifiers = yes
		}}
		FROM = { every_system_planet = {
			limit = { 
				has_owner = yes 
				owner = { is_same_value = ROOT.owner }
			}
			if = {
				limit = { owner = { check_variable = { which = bubbles_level value = 1 }}}
				if = {
					limit = { NOT = { has_modifier = planet_modifier_bubbles_affection_lv1 }}
					remove_all_bubbles_planet_modifiers = yes
					add_modifier = { modifier = planet_modifier_bubbles_affection_lv1 }
				}
			} else_if = {
				limit = { owner = { check_variable = { which = bubbles_level value = 2 }}}
				if = {
					limit = { NOT = { has_modifier = planet_modifier_bubbles_affection_lv2 }}
					remove_all_bubbles_planet_modifiers = yes
					add_modifier = { modifier = planet_modifier_bubbles_affection_lv2 }
				}
			} else_if = {
				limit = { owner = { check_variable = { which = bubbles_level value = 3 }}}
				if = {
					limit = { NOT = { has_modifier = planet_modifier_bubbles_affection_lv3 }}
					remove_all_bubbles_planet_modifiers = yes
					add_modifier = { modifier = planet_modifier_bubbles_affection_lv3 }
				}
			} else_if = {
				limit = { owner = { check_variable = { which = bubbles_level value = 4 }}}
				if = {
					limit = { NOT = { has_modifier = planet_modifier_bubbles_affection_lv4 }}
					remove_all_bubbles_planet_modifiers = yes
					add_modifier = { modifier = planet_modifier_bubbles_affection_lv4 }
				}
			} else_if = {
				limit = { owner = { check_variable = { which = bubbles_level value = 5 }}}
				if = {
					limit = { NOT = { has_modifier = planet_modifier_bubbles_affection_lv5 }}
					remove_all_bubbles_planet_modifiers = yes
					add_modifier = { modifier = planet_modifier_bubbles_affection_lv5 }
				}
			}
		}}
	}
}

country_event = {
	id = wg_aft.10000
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		has_wg_special_authority = yes
		NOR = {
			has_ascension_perk = ap_shenhai_silent
			has_civic = civic_CM
		}
	}

	immediate = {
		set_global_flag = initialize_affection_traits
		if = {
			limit = { years_passed >= 50 }
			every_owned_leader = {
				limit = { is_wg_leader = yes }
				set_variable = { which = affection_level value = 2 }
				switch = {
					trigger = leader_class
					governor = { 
						add_trait = leader_trait_governor_affection_lv2 
						set_variable = { which = affection value = @governor_affection_to_lv2 }
					}
					scientist = { 
						add_trait = leader_trait_scientist_affection_lv2
						set_variable = { which = affection value = @scientist_affection_to_lv2 } 
					}
					admiral = { 
						add_trait = leader_trait_admiral_affection_lv2 
						set_variable = { which = affection value = @admiral_affection_to_lv2 }
					}
					general = { 
						add_trait = leader_trait_general_affection_lv2 
						set_variable = { which = affection value = @general_affection_to_lv2 }
					}
					ruler = { 
						add_ruler_trait = leader_trait_ruler_affection_lv2 
						set_variable = { which = affection value = @ruler_affection_to_lv2 }
					}
				}
			}
		} else = {
			every_owned_leader = {
				limit = { is_wg_leader = yes }
				set_variable = { which = affection_level value = 1 }
				switch = {
					trigger = leader_class
					governor = { add_trait = leader_trait_governor_affection_lv1 }
					scientist = { add_trait = leader_trait_scientist_affection_lv1 }
					admiral = { add_trait = leader_trait_admiral_affection_lv1 }
					general = { add_trait = leader_trait_general_affection_lv1 }
					ruler = { add_ruler_trait = leader_trait_ruler_affection_lv1 }
				}
			}
		}
		if = {
			limit = { has_country_flag = gain_wsg_lady }
			set_variable = { which = lady_affection_level value = 1 }
		}
	}
}

country_event = {
	id = wg_aft.10001
	title = wg_aft.10001.name
	desc = wg_aft.10001.desc
	picture = GFX_evt_wsg_no_video
	is_triggered_only = yes

	option = {
		name = wg_aft.10001.a
	}
}

# debug测试用
country_event = {
	id = wg_aft.12452
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		always = no
	}

	immediate = {
		random_owned_leader = {
			limit = { is_wg_leader = yes }
			switch = {
				trigger = leader_class
				governor = {
					set_variable = { which = affection value = @governor_affection_to_lv4 }
					set_variable = { which = affection_level value = 2 }
				}
				admiral = {
					set_variable = { which = affection value = @admiral_affection_to_lv4 }
					set_variable = { which = affection_level value = 3 }
				}
				scientist = {
					set_variable = { which = affection value = @scientist_affection_to_lv3 }
					set_variable = { which = affection_level value = 1 }
				}
				general = {
					set_variable = { which = affection value = @general_affection_to_lv5 }
					set_variable = { which = affection_level value = 3 }
				}
				ruler = {
					set_variable = { which = affection value = @ruler_affection_to_lv5 }
					set_variable = { which = affection_level value = 2 }
				}
			}
		}
	}
}